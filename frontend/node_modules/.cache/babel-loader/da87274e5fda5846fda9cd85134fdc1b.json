{"ast":null,"code":"/*!\n * @license deepcopy.js Copyright(c) 2013 sasa+1\n * https://github.com/sasaplus1/deepcopy.js\n * Released under the MIT license.\n *\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.deepcopy = factory());\n})(this, function () {\n  'use strict';\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n  var typeDetect = createCommonjsModule(function (module, exports) {\n    (function (global, factory) {\n      module.exports = factory();\n    })(commonjsGlobal, function () {\n      /* !\n       * type-detect\n       * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n       * MIT Licensed\n       */\n      var promiseExists = typeof Promise === 'function';\n\n      /* eslint-disable no-undef */\n      var globalObject = typeof self === 'object' ? self : commonjsGlobal; // eslint-disable-line id-blacklist\n\n      var symbolExists = typeof Symbol !== 'undefined';\n      var mapExists = typeof Map !== 'undefined';\n      var setExists = typeof Set !== 'undefined';\n      var weakMapExists = typeof WeakMap !== 'undefined';\n      var weakSetExists = typeof WeakSet !== 'undefined';\n      var dataViewExists = typeof DataView !== 'undefined';\n      var symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\n      var symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\n      var setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\n      var mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\n      var setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\n      var mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\n      var arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\n      var arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\n      var stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\n      var stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\n      var toStringLeftSliceLength = 8;\n      var toStringRightSliceLength = -1;\n      /**\n       * ### typeOf (obj)\n       *\n       * Uses `Object.prototype.toString` to determine the type of an object,\n       * normalising behaviour across engine versions & well optimised.\n       *\n       * @param {Mixed} object\n       * @return {String} object type\n       * @api public\n       */\n      function typeDetect(obj) {\n        /* ! Speed optimisation\n         * Pre:\n         *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n         *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n         *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n         *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n         *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n         * Post:\n         *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n         *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n         *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n         *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n         *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n         */\n        var typeofObj = typeof obj;\n        if (typeofObj !== 'object') {\n          return typeofObj;\n        }\n\n        /* ! Speed optimisation\n         * Pre:\n         *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n         * Post:\n         *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n         */\n        if (obj === null) {\n          return 'null';\n        }\n\n        /* ! Spec Conformance\n         * Test: `Object.prototype.toString.call(window)``\n         *  - Node === \"[object global]\"\n         *  - Chrome === \"[object global]\"\n         *  - Firefox === \"[object Window]\"\n         *  - PhantomJS === \"[object Window]\"\n         *  - Safari === \"[object Window]\"\n         *  - IE 11 === \"[object Window]\"\n         *  - IE Edge === \"[object Window]\"\n         * Test: `Object.prototype.toString.call(this)``\n         *  - Chrome Worker === \"[object global]\"\n         *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n         *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n         *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n         *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n         */\n        if (obj === globalObject) {\n          return 'global';\n        }\n\n        /* ! Speed optimisation\n         * Pre:\n         *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n         * Post:\n         *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n         */\n        if (Array.isArray(obj) && (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))) {\n          return 'Array';\n        }\n\n        // Not caching existence of `window` and related properties due to potential\n        // for `window` to be unset before tests in quasi-browser environments.\n        if (typeof window === 'object' && window !== null) {\n          /* ! Spec Conformance\n           * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n           * WhatWG HTML$7.7.3 - The `Location` interface\n           * Test: `Object.prototype.toString.call(window.location)``\n           *  - IE <=11 === \"[object Object]\"\n           *  - IE Edge <=13 === \"[object Object]\"\n           */\n          if (typeof window.location === 'object' && obj === window.location) {\n            return 'Location';\n          }\n\n          /* ! Spec Conformance\n           * (https://html.spec.whatwg.org/#document)\n           * WhatWG HTML$3.1.1 - The `Document` object\n           * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n           *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n           *       which suggests that browsers should use HTMLTableCellElement for\n           *       both TD and TH elements. WhatWG separates these.\n           *       WhatWG HTML states:\n           *         > For historical reasons, Window objects must also have a\n           *         > writable, configurable, non-enumerable property named\n           *         > HTMLDocument whose value is the Document interface object.\n           * Test: `Object.prototype.toString.call(document)``\n           *  - Chrome === \"[object HTMLDocument]\"\n           *  - Firefox === \"[object HTMLDocument]\"\n           *  - Safari === \"[object HTMLDocument]\"\n           *  - IE <=10 === \"[object Document]\"\n           *  - IE 11 === \"[object HTMLDocument]\"\n           *  - IE Edge <=13 === \"[object HTMLDocument]\"\n           */\n          if (typeof window.document === 'object' && obj === window.document) {\n            return 'Document';\n          }\n          if (typeof window.navigator === 'object') {\n            /* ! Spec Conformance\n             * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n             * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n             * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n             *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n             */\n            if (typeof window.navigator.mimeTypes === 'object' && obj === window.navigator.mimeTypes) {\n              return 'MimeTypeArray';\n            }\n\n            /* ! Spec Conformance\n             * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n             * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n             * Test: `Object.prototype.toString.call(navigator.plugins)``\n             *  - IE <=10 === \"[object MSPluginsCollection]\"\n             */\n            if (typeof window.navigator.plugins === 'object' && obj === window.navigator.plugins) {\n              return 'PluginArray';\n            }\n          }\n          if ((typeof window.HTMLElement === 'function' || typeof window.HTMLElement === 'object') && obj instanceof window.HTMLElement) {\n            /* ! Spec Conformance\n            * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n            * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n            * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n            *  - IE <=10 === \"[object HTMLBlockElement]\"\n            */\n            if (obj.tagName === 'BLOCKQUOTE') {\n              return 'HTMLQuoteElement';\n            }\n\n            /* ! Spec Conformance\n             * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n             * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n             * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n             *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n             *       which suggests that browsers should use HTMLTableCellElement for\n             *       both TD and TH elements. WhatWG separates these.\n             * Test: Object.prototype.toString.call(document.createElement('td'))\n             *  - Chrome === \"[object HTMLTableCellElement]\"\n             *  - Firefox === \"[object HTMLTableCellElement]\"\n             *  - Safari === \"[object HTMLTableCellElement]\"\n             */\n            if (obj.tagName === 'TD') {\n              return 'HTMLTableDataCellElement';\n            }\n\n            /* ! Spec Conformance\n             * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n             * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n             * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n             *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n             *       which suggests that browsers should use HTMLTableCellElement for\n             *       both TD and TH elements. WhatWG separates these.\n             * Test: Object.prototype.toString.call(document.createElement('th'))\n             *  - Chrome === \"[object HTMLTableCellElement]\"\n             *  - Firefox === \"[object HTMLTableCellElement]\"\n             *  - Safari === \"[object HTMLTableCellElement]\"\n             */\n            if (obj.tagName === 'TH') {\n              return 'HTMLTableHeaderCellElement';\n            }\n          }\n        }\n\n        /* ! Speed optimisation\n        * Pre:\n        *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n        *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n        *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n        *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n        *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n        *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n        *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n        *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n        *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n        * Post:\n        *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n        *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n        *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n        *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n        *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n        *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n        *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n        *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n        *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n        */\n        var stringTag = symbolToStringTagExists && obj[Symbol.toStringTag];\n        if (typeof stringTag === 'string') {\n          return stringTag;\n        }\n        var objPrototype = Object.getPrototypeOf(obj);\n        /* ! Speed optimisation\n        * Pre:\n        *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n        *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n        * Post:\n        *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n        *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n        */\n        if (objPrototype === RegExp.prototype) {\n          return 'RegExp';\n        }\n\n        /* ! Speed optimisation\n        * Pre:\n        *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n        * Post:\n        *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n        */\n        if (objPrototype === Date.prototype) {\n          return 'Date';\n        }\n\n        /* ! Spec Conformance\n         * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n         * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n         * Test: `Object.prototype.toString.call(Promise.resolve())``\n         *  - Chrome <=47 === \"[object Object]\"\n         *  - Edge <=20 === \"[object Object]\"\n         *  - Firefox 29-Latest === \"[object Promise]\"\n         *  - Safari 7.1-Latest === \"[object Promise]\"\n         */\n        if (promiseExists && objPrototype === Promise.prototype) {\n          return 'Promise';\n        }\n\n        /* ! Speed optimisation\n        * Pre:\n        *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n        * Post:\n        *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n        */\n        if (setExists && objPrototype === Set.prototype) {\n          return 'Set';\n        }\n\n        /* ! Speed optimisation\n        * Pre:\n        *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n        * Post:\n        *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n        */\n        if (mapExists && objPrototype === Map.prototype) {\n          return 'Map';\n        }\n\n        /* ! Speed optimisation\n        * Pre:\n        *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n        * Post:\n        *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n        */\n        if (weakSetExists && objPrototype === WeakSet.prototype) {\n          return 'WeakSet';\n        }\n\n        /* ! Speed optimisation\n        * Pre:\n        *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n        * Post:\n        *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n        */\n        if (weakMapExists && objPrototype === WeakMap.prototype) {\n          return 'WeakMap';\n        }\n\n        /* ! Spec Conformance\n         * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n         * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n         * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n         *  - Edge <=13 === \"[object Object]\"\n         */\n        if (dataViewExists && objPrototype === DataView.prototype) {\n          return 'DataView';\n        }\n\n        /* ! Spec Conformance\n         * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n         * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n         * Test: `Object.prototype.toString.call(new Map().entries())``\n         *  - Edge <=13 === \"[object Object]\"\n         */\n        if (mapExists && objPrototype === mapIteratorPrototype) {\n          return 'Map Iterator';\n        }\n\n        /* ! Spec Conformance\n         * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n         * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n         * Test: `Object.prototype.toString.call(new Set().entries())``\n         *  - Edge <=13 === \"[object Object]\"\n         */\n        if (setExists && objPrototype === setIteratorPrototype) {\n          return 'Set Iterator';\n        }\n\n        /* ! Spec Conformance\n         * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n         * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n         * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n         *  - Edge <=13 === \"[object Object]\"\n         */\n        if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n          return 'Array Iterator';\n        }\n\n        /* ! Spec Conformance\n         * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n         * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n         * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n         *  - Edge <=13 === \"[object Object]\"\n         */\n        if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n          return 'String Iterator';\n        }\n\n        /* ! Speed optimisation\n        * Pre:\n        *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n        * Post:\n        *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n        */\n        if (objPrototype === null) {\n          return 'Object';\n        }\n        return Object.prototype.toString.call(obj).slice(toStringLeftSliceLength, toStringRightSliceLength);\n      }\n      return typeDetect;\n    });\n  });\n  const isBufferExists = typeof Buffer !== 'undefined';\n  const isBufferFromExists = isBufferExists && typeof Buffer.from !== 'undefined';\n  const isBuffer = isBufferExists ?\n  /**\n   * is value is Buffer?\n   *\n   * @param {*} value\n   * @return {boolean}\n   */\n  function isBuffer(value) {\n    return Buffer.isBuffer(value);\n  } :\n  /**\n   * return false\n   *\n   * NOTE: for Buffer unsupported\n   *\n   * @return {boolean}\n   */\n  function isBuffer() {\n    return false;\n  };\n  const copy = isBufferFromExists ?\n  /**\n   * copy Buffer\n   *\n   * @param {Buffer} value\n   * @return {Buffer}\n   */\n  function copy(value) {\n    return Buffer.from(value);\n  } : isBufferExists ?\n  /**\n   * copy Buffer\n   *\n   * NOTE: for old node.js\n   *\n   * @param {Buffer} value\n   * @return {Buffer}\n   */\n  function copy(value) {\n    return new Buffer(value);\n  } :\n  /**\n   * shallow copy\n   *\n   * NOTE: for Buffer unsupported\n   *\n   * @param {*}\n   * @return {*}\n   */\n  function copy(value) {\n    return value;\n  };\n\n  /**\n   * detect type of value\n   *\n   * @param {*} value\n   * @return {string}\n   */\n  function detectType(value) {\n    // NOTE: isBuffer must execute before type-detect,\n    // because type-detect returns 'Uint8Array'.\n    if (isBuffer(value)) {\n      return 'Buffer';\n    }\n    return typeDetect(value);\n  }\n\n  /**\n   * collection types\n   */\n  const collectionTypeSet = new Set(['Arguments', 'Array', 'Map', 'Object', 'Set']);\n\n  /**\n   * get value from collection\n   *\n   * @param {Array|Object|Map|Set} collection\n   * @param {string|number|symbol} key\n   * @param {string} [type=null]\n   * @return {*}\n   */\n  function get(collection, key) {\n    let type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    const valueType = type || detectType(collection);\n    switch (valueType) {\n      case 'Arguments':\n      case 'Array':\n      case 'Object':\n        return collection[key];\n      case 'Map':\n        return collection.get(key);\n      case 'Set':\n        // NOTE: Set.prototype.keys is alias of Set.prototype.values\n        // it means key is equals value\n        return key;\n    }\n  }\n\n  /**\n   * check to type string is collection\n   *\n   * @param {string} type\n   */\n  function isCollection(type) {\n    return collectionTypeSet.has(type);\n  }\n\n  /**\n   * set value to collection\n   *\n   * @param {Array|Object|Map|Set} collection\n   * @param {string|number|symbol} key\n   * @param {*} value\n   * @param {string} [type=null]\n   * @return {Array|Object|Map|Set}\n   */\n  function set(collection, key, value) {\n    let type = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    const valueType = type || detectType(collection);\n    switch (valueType) {\n      case 'Arguments':\n      case 'Array':\n      case 'Object':\n        collection[key] = value;\n        break;\n      case 'Map':\n        collection.set(key, value);\n        break;\n      case 'Set':\n        collection.add(value);\n        break;\n    }\n    return collection;\n  }\n  const freeGlobalThis = typeof globalThis !== 'undefined' && globalThis !== null && globalThis.Object === Object && globalThis;\n  const freeGlobal = typeof global !== 'undefined' && global !== null && global.Object === Object && global;\n  const freeSelf = typeof self !== 'undefined' && self !== null && self.Object === Object && self;\n  const globalObject = freeGlobalThis || freeGlobal || freeSelf || Function('return this')();\n\n  /**\n   * copy ArrayBuffer\n   *\n   * @param {ArrayBuffer} value\n   * @return {ArrayBuffer}\n   */\n  function copyArrayBuffer(value) {\n    return value.slice(0);\n  }\n\n  /**\n   * copy Boolean\n   *\n   * @param {Boolean} value\n   * @return {Boolean}\n   */\n  function copyBoolean(value) {\n    return new Boolean(value.valueOf());\n  }\n\n  /**\n   * copy DataView\n   *\n   * @param {DataView} value\n   * @return {DataView}\n   */\n  function copyDataView(value) {\n    // TODO: copy ArrayBuffer?\n    return new DataView(value.buffer);\n  }\n\n  /**\n   * copy Buffer\n   *\n   * @param {Buffer} value\n   * @return {Buffer}\n   */\n  function copyBuffer(value) {\n    return copy(value);\n  }\n\n  /**\n   * copy Date\n   *\n   * @param {Date} value\n   * @return {Date}\n   */\n  function copyDate(value) {\n    return new Date(value.getTime());\n  }\n\n  /**\n   * copy Number\n   *\n   * @param {Number} value\n   * @return {Number}\n   */\n  function copyNumber(value) {\n    return new Number(value);\n  }\n\n  /**\n   * copy RegExp\n   *\n   * @param {RegExp} value\n   * @return {RegExp}\n   */\n  function copyRegExp(value) {\n    return new RegExp(value.source, value.flags);\n  }\n\n  /**\n   * copy String\n   *\n   * @param {String} value\n   * @return {String}\n   */\n  function copyString(value) {\n    return new String(value);\n  }\n\n  /**\n   * copy TypedArray\n   *\n   * @param {*} value\n   * @return {*}\n   */\n  function copyTypedArray(value, type) {\n    const typedArray = globalObject[type];\n    if (typedArray.from) {\n      return globalObject[type].from(value);\n    }\n    return new globalObject[type](value);\n  }\n\n  /**\n   * shallow copy\n   *\n   * @param {*} value\n   * @return {*}\n   */\n  function shallowCopy(value) {\n    return value;\n  }\n\n  /**\n   * get empty Array\n   *\n   * @return {Array}\n   */\n  function getEmptyArray() {\n    return [];\n  }\n\n  /**\n   * get empty Map\n   *\n   * @return {Map}\n   */\n  function getEmptyMap() {\n    return new Map();\n  }\n\n  /**\n   * get empty Object\n   *\n   * @return {Object}\n   */\n  function getEmptyObject() {\n    return {};\n  }\n\n  /**\n   * get empty Set\n   *\n   * @return {Set}\n   */\n  function getEmptySet() {\n    return new Set();\n  }\n  var copyMap = new Map([\n  // deep copy\n  ['ArrayBuffer', copyArrayBuffer], ['Boolean', copyBoolean], ['Buffer', copyBuffer], ['DataView', copyDataView], ['Date', copyDate], ['Number', copyNumber], ['RegExp', copyRegExp], ['String', copyString],\n  // typed arrays\n  // TODO: pass bound function\n  ['Float32Array', copyTypedArray], ['Float64Array', copyTypedArray], ['Int16Array', copyTypedArray], ['Int32Array', copyTypedArray], ['Int8Array', copyTypedArray], ['Uint16Array', copyTypedArray], ['Uint32Array', copyTypedArray], ['Uint8Array', copyTypedArray], ['Uint8ClampedArray', copyTypedArray],\n  // shallow copy\n  ['Array Iterator', shallowCopy], ['Map Iterator', shallowCopy], ['Promise', shallowCopy], ['Set Iterator', shallowCopy], ['String Iterator', shallowCopy], ['function', shallowCopy], ['global', shallowCopy],\n  // NOTE: WeakMap and WeakSet cannot get entries\n  ['WeakMap', shallowCopy], ['WeakSet', shallowCopy],\n  // primitives\n  ['boolean', shallowCopy], ['null', shallowCopy], ['number', shallowCopy], ['string', shallowCopy], ['symbol', shallowCopy], ['undefined', shallowCopy],\n  // collections\n  // NOTE: return empty value, because recursively copy later.\n  ['Arguments', getEmptyArray], ['Array', getEmptyArray], ['Map', getEmptyMap], ['Object', getEmptyObject], ['Set', getEmptySet]\n\n  // NOTE: type-detect returns following types\n  // 'Location'\n  // 'Document'\n  // 'MimeTypeArray'\n  // 'PluginArray'\n  // 'HTMLQuoteElement'\n  // 'HTMLTableDataCellElement'\n  // 'HTMLTableHeaderCellElement'\n\n  // TODO: is type-detect never return 'object'?\n  // 'object'\n  ]);\n\n  /**\n   * no operation\n   */\n  function noop() {}\n\n  /**\n   * copy value\n   *\n   * @param {*} value\n   * @param {string} [type=null]\n   * @param {Function} [customizer=noop]\n   * @return {*}\n   */\n  function copy$1(value) {\n    let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let customizer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noop;\n    if (arguments.length === 2 && typeof type === 'function') {\n      customizer = type;\n      type = null;\n    }\n    const valueType = type || detectType(value);\n    const copyFunction = copyMap.get(valueType);\n    if (valueType === 'Object') {\n      const result = customizer(value, valueType);\n      if (result !== undefined) {\n        return result;\n      }\n    }\n\n    // NOTE: TypedArray needs pass type to argument\n    return copyFunction ? copyFunction(value, valueType) : value;\n  }\n\n  /**\n   * deepcopy function\n   *\n   * @param {*} value\n   * @param {Object|Function} [options]\n   * @return {*}\n   */\n  function deepcopy(value) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (typeof options === 'function') {\n      options = {\n        customizer: options\n      };\n    }\n    const {\n      // TODO: before/after customizer\n      customizer\n      // TODO: max depth\n      // depth = Infinity,\n    } = options;\n    const valueType = detectType(value);\n    if (!isCollection(valueType)) {\n      return recursiveCopy(value, null, null, null);\n    }\n    const copiedValue = copy$1(value, valueType, customizer);\n    const references = new WeakMap([[value, copiedValue]]);\n    const visited = new WeakSet([value]);\n    return recursiveCopy(value, copiedValue, references, visited);\n  }\n\n  /**\n   * recursively copy\n   *\n   * @param {*} value target value\n   * @param {*} clone clone of value\n   * @param {WeakMap} references visited references of clone\n   * @param {WeakSet} visited visited references of value\n   * @param {Function} customizer user customize function\n   * @return {*}\n   */\n  function recursiveCopy(value, clone, references, visited, customizer) {\n    const type = detectType(value);\n    const copiedValue = copy$1(value, type);\n\n    // return if not a collection value\n    if (!isCollection(type)) {\n      return copiedValue;\n    }\n    let keys;\n    switch (type) {\n      case 'Arguments':\n      case 'Array':\n        keys = Object.keys(value);\n        break;\n      case 'Object':\n        keys = Object.keys(value);\n        keys.push(...Object.getOwnPropertySymbols(value));\n        break;\n      case 'Map':\n      case 'Set':\n        keys = value.keys();\n        break;\n    }\n\n    // walk within collection with iterator\n    for (let collectionKey of keys) {\n      const collectionValue = get(value, collectionKey, type);\n      if (visited.has(collectionValue)) {\n        // for [Circular]\n        set(clone, collectionKey, references.get(collectionValue), type);\n      } else {\n        const collectionValueType = detectType(collectionValue);\n        const copiedCollectionValue = copy$1(collectionValue, collectionValueType);\n\n        // save reference if value is collection\n        if (isCollection(collectionValueType)) {\n          references.set(collectionValue, copiedCollectionValue);\n          visited.add(collectionValue);\n        }\n        set(clone, collectionKey, recursiveCopy(collectionValue, copiedCollectionValue, references, visited), type);\n      }\n    }\n\n    // TODO: isSealed/isFrozen/isExtensible\n\n    return clone;\n  }\n  return deepcopy;\n});","map":{"version":3,"sources":["../node_modules/type-detect/type-detect.js","../src/buffer.mjs","../src/detector.mjs","../src/collection.mjs","../src/global.mjs","../src/copy_map.mjs","../src/copier.mjs","../src/index.mjs"],"names":["this","global","cloneBuffer","copy"],"mappings":";;;;;;;;;;;;;;;;;;;;;IAAC,WAAU,MAAM,EAAE,OAAO,EAAE;MACoC,MAAA,CAAA,OAAc,GAAG,OAAO,CAAA,CAAE;IAG1F,CAAC,EAACA,cAAI,EAAG,YAAY;MAErB;AACA;AACA;AACA;AACA;MACA,IAAI,aAAa,GAAG,OAAO,OAAO,KAAK,UAAU;;MAEjD;MACA,IAAI,YAAY,GAAG,OAAO,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAGC,cAAM,CAAC,CAAA;;MAE5D,IAAI,YAAY,GAAG,OAAO,MAAM,KAAK,WAAW;MAChD,IAAI,SAAS,GAAG,OAAO,GAAG,KAAK,WAAW;MAC1C,IAAI,SAAS,GAAG,OAAO,GAAG,KAAK,WAAW;MAC1C,IAAI,aAAa,GAAG,OAAO,OAAO,KAAK,WAAW;MAClD,IAAI,aAAa,GAAG,OAAO,OAAO,KAAK,WAAW;MAClD,IAAI,cAAc,GAAG,OAAO,QAAQ,KAAK,WAAW;MACpD,IAAI,oBAAoB,GAAG,YAAY,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,WAAW;MACjF,IAAI,uBAAuB,GAAG,YAAY,IAAI,OAAO,MAAM,CAAC,WAAW,KAAK,WAAW;MACvF,IAAI,gBAAgB,GAAG,SAAS,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU;MAC/E,IAAI,gBAAgB,GAAG,SAAS,IAAI,OAAO,GAAG,CAAC,SAAS,CAAC,OAAO,KAAK,UAAU;MAC/E,IAAI,oBAAoB,GAAG,gBAAgB,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,CAAA,CAAE,CAAC,OAAO,CAAA,CAAE,CAAC;MACzF,IAAI,oBAAoB,GAAG,gBAAgB,IAAI,MAAM,CAAC,cAAc,CAAC,IAAI,GAAG,CAAA,CAAE,CAAC,OAAO,CAAA,CAAE,CAAC;MACzF,IAAI,mBAAmB,GAAG,oBAAoB,IAAI,OAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU;MACxG,IAAI,sBAAsB,GAAG,mBAAmB,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA,CAAE,CAAC;MAChG,IAAI,oBAAoB,GAAG,oBAAoB,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU;MAC1G,IAAI,uBAAuB,GAAG,oBAAoB,IAAI,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAA,CAAE,CAAC;MAClG,IAAI,uBAAuB,GAAG,CAAC;MAC/B,IAAI,wBAAwB,GAAG,CAAC,CAAC;MACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;MACA,SAAS,UAAU,CAAC,GAAG,EAAE;QACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,SAAS,GAAG,OAAO,GAAG;QAC1B,IAAI,SAAS,KAAK,QAAQ,EAAE;UAC1B,OAAO,SAAS;QACpB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,GAAG,KAAK,IAAI,EAAE;UAChB,OAAO,MAAM;QACjB;;QAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,GAAG,KAAK,YAAY,EAAE;UACxB,OAAO,QAAQ;QACnB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IACE,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KACjB,uBAAuB,KAAK,KAAK,IAAI,EAAE,MAAM,CAAC,WAAW,IAAI,GAAG,CAAC,CAAC,EACnE;UACA,OAAO,OAAO;QAClB;;QAEA;QACA;QACE,IAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,KAAK,IAAI,EAAE;UACrD;AACA;AACA;AACA;AACA;AACA;AACA;UACI,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ,IAAI,GAAG,KAAK,MAAM,CAAC,QAAQ,EAAE;YAClE,OAAO,UAAU;UACvB;;UAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UACI,IAAI,OAAO,MAAM,CAAC,QAAQ,KAAK,QAAQ,IAAI,GAAG,KAAK,MAAM,CAAC,QAAQ,EAAE;YAClE,OAAO,UAAU;UACvB;UAEI,IAAI,OAAO,MAAM,CAAC,SAAS,KAAK,QAAQ,EAAE;YAC9C;AACA;AACA;AACA;AACA;AACA;YACM,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,SAAS,KAAK,QAAQ,IAC9C,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,SAAS,EAAE;cACtC,OAAO,eAAe;YAC9B;;YAEA;AACA;AACA;AACA;AACA;AACA;YACM,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,OAAO,KAAK,QAAQ,IAC5C,GAAG,KAAK,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE;cACpC,OAAO,aAAa;YAC5B;UACA;UAEI,IAAI,CAAC,OAAO,MAAM,CAAC,WAAW,KAAK,UAAU,IACzC,OAAO,MAAM,CAAC,WAAW,KAAK,QAAQ,KACtC,GAAG,YAAY,MAAM,CAAC,WAAW,EAAE;YAC3C;AACA;AACA;AACA;AACA;AACA;YACM,IAAI,GAAG,CAAC,OAAO,KAAK,YAAY,EAAE;cAChC,OAAO,kBAAkB;YACjC;;YAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;YACM,IAAI,GAAG,CAAC,OAAO,KAAK,IAAI,EAAE;cACxB,OAAO,0BAA0B;YACzC;;YAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;YACM,IAAI,GAAG,CAAC,OAAO,KAAK,IAAI,EAAE;cACxB,OAAO,4BAA4B;YAC3C;UACA;QACA;;QAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,SAAS,GAAI,uBAAuB,IAAI,GAAG,CAAC,MAAM,CAAC,WAAW,CAAE;QACpE,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;UACjC,OAAO,SAAS;QACpB;QAEE,IAAI,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC;QAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,YAAY,KAAK,MAAM,CAAC,SAAS,EAAE;UACrC,OAAO,QAAQ;QACnB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,YAAY,KAAK,IAAI,CAAC,SAAS,EAAE;UACnC,OAAO,MAAM;QACjB;;QAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,aAAa,IAAI,YAAY,KAAK,OAAO,CAAC,SAAS,EAAE;UACvD,OAAO,SAAS;QACpB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,SAAS,IAAI,YAAY,KAAK,GAAG,CAAC,SAAS,EAAE;UAC/C,OAAO,KAAK;QAChB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,SAAS,IAAI,YAAY,KAAK,GAAG,CAAC,SAAS,EAAE;UAC/C,OAAO,KAAK;QAChB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,aAAa,IAAI,YAAY,KAAK,OAAO,CAAC,SAAS,EAAE;UACvD,OAAO,SAAS;QACpB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,aAAa,IAAI,YAAY,KAAK,OAAO,CAAC,SAAS,EAAE;UACvD,OAAO,SAAS;QACpB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,cAAc,IAAI,YAAY,KAAK,QAAQ,CAAC,SAAS,EAAE;UACzD,OAAO,UAAU;QACrB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,SAAS,IAAI,YAAY,KAAK,oBAAoB,EAAE;UACtD,OAAO,cAAc;QACzB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,SAAS,IAAI,YAAY,KAAK,oBAAoB,EAAE;UACtD,OAAO,cAAc;QACzB;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,mBAAmB,IAAI,YAAY,KAAK,sBAAsB,EAAE;UAClE,OAAO,gBAAgB;QAC3B;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,oBAAoB,IAAI,YAAY,KAAK,uBAAuB,EAAE;UACpE,OAAO,iBAAiB;QAC5B;;QAEA;AACA;AACA;AACA;AACA;AACA;QACE,IAAI,YAAY,KAAK,IAAI,EAAE;UACzB,OAAO,QAAQ;QACnB;QAEE,OAAO,MAAM,CACV,SAAS,CACT,QAAQ,CACR,IAAI,CAAC,GAAG,CAAC,CACT,KAAK,CAAC,uBAAuB,EAAE,wBAAwB,CAAC;MAC7D;MAEA,OAAO,UAAU;IAEjB,CAAC,CAAE;;ECnYH,MAAM,cAAc,GAAG,OAAO,MAAM,KAAK,WAAW;EACpD,MAAM,kBAAkB,GAAG,cAAc,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,WAAW;EAExE,MAAM,QAAQ,GAAG,cAAc;EACtC;AACA;AACA;AACA;AACA;AACA;EACI,SAAS,QAAQ,CAAC,KAAK,EAAE;IACvB,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;EACnC,CAAK;EACL;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAAS,QAAQ,CAAA,EAAG;IAClB,OAAO,KAAK;EAClB,CAAK;EAEE,MAAM,IAAI,GAAG,kBAAkB;EACtC;AACA;AACA;AACA;AACA;AACA;EACI,SAAS,IAAI,CAAC,KAAK,EAAE;IACnB,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;EAC/B,CAAK,GACD,cAAc;EAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAAS,IAAI,CAAC,KAAK,EAAE;IACnB,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC;EAC9B,CAAK;EACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAAS,IAAI,CAAC,KAAK,EAAE;IACnB,OAAO,KAAK;EAClB,CAAK;;ECpDL;AACA;AACA;AACA;AACA;AACA;EACO,SAAS,UAAU,CAAC,KAAK,EAAE;IAClC;IACA;IACE,IAAI,QAAQ,CAAC,KAAK,CAAC,EAAE;MACnB,OAAO,QAAQ;IACnB;IAEE,OAAO,UAAU,CAAC,KAAK,CAAC;EAC1B;;EChBA;AACA;AACA;EACA,MAAM,iBAAiB,GAAG,IAAI,GAAG,CAAC,CAChC,WAAW,EACX,OAAO,EACP,KAAK,EACL,QAAQ,EACR,KAAK,CACN,CAAC;;EAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,SAAS,GAAG,CAAC,UAAU,EAAE,GAAG,EAAe;IAAA,IAAb,IAAI,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;IAC9C,MAAM,SAAS,GAAG,IAAI,IAAI,UAAU,CAAC,UAAU,CAAC;IAEhD,QAAQ,SAAS;MACf,KAAK,WAAW;MAChB,KAAK,OAAO;MACZ,KAAK,QAAQ;QACX,OAAO,UAAU,CAAC,GAAG,CAAC;MACxB,KAAK,KAAK;QACR,OAAO,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC;MAC5B,KAAK,KAAK;QACd;QACA;QACM,OAAO,GAAG;IAEhB;EACA;;EAEA;AACA;AACA;AACA;AACA;EACO,SAAS,YAAY,CAAC,IAAI,EAAE;IACjC,OAAO,iBAAiB,CAAC,GAAG,CAAC,IAAI,CAAC;EACpC;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,SAAS,GAAG,CAAC,UAAU,EAAE,GAAG,EAAE,KAAK,EAAe;IAAA,IAAb,IAAI,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;IACrD,MAAM,SAAS,GAAG,IAAI,IAAI,UAAU,CAAC,UAAU,CAAC;IAEhD,QAAQ,SAAS;MACf,KAAK,WAAW;MAChB,KAAK,OAAO;MACZ,KAAK,QAAQ;QACX,UAAU,CAAC,GAAG,CAAC,GAAG,KAAK;QACvB;MACF,KAAK,KAAK;QACR,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC;QAC1B;MACF,KAAK,KAAK;QACR,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC;QACrB;IAEN;IAEE,OAAO,UAAU;EACnB;EC5EA,MAAM,cAAc,GAClB,OAAO,UAAU,KAAK,WAAW,IACjC,UAAU,KAAK,IAAI,IACnB,UAAU,CAAC,MAAM,KAAK,MAAM,IAC5B,UAAU;EAEZ,MAAM,UAAU,GACd,OAAO,MAAM,KAAK,WAAW,IAC7B,MAAM,KAAK,IAAI,IACf,MAAM,CAAC,MAAM,KAAK,MAAM,IACxB,MAAM;EAER,MAAM,QAAQ,GACZ,OAAO,IAAI,KAAK,WAAW,IAC3B,IAAI,KAAK,IAAI,IACb,IAAI,CAAC,MAAM,KAAK,MAAM,IACtB,IAAI;EAEC,MAAM,YAAY,GACvB,cAAc,IAAI,UAAU,IAAI,QAAQ,IAAI,QAAQ,CAAC,aAAa,CAAC,CAAA,CAAE;;EChBvE;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,eAAe,CAAC,KAAK,EAAE;IAC9B,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;EACvB;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,WAAW,CAAC,KAAK,EAAE;IAC1B,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,CAAA,CAAE,CAAC;EACrC;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,YAAY,CAAC,KAAK,EAAE;IAC7B;IACE,OAAO,IAAI,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;EACnC;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,UAAU,CAAC,KAAK,EAAE;IACzB,OAAOC,IAAW,CAAC,KAAK,CAAC;EAC3B;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,QAAQ,CAAC,KAAK,EAAE;IACvB,OAAO,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAA,CAAE,CAAC;EAClC;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,UAAU,CAAC,KAAK,EAAE;IACzB,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC;EAC1B;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,UAAU,CAAC,KAAK,EAAE;IACzB,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,KAAK,CAAC;EAC9C;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,UAAU,CAAC,KAAK,EAAE;IACzB,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC;EAC1B;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,cAAc,CAAC,KAAK,EAAE,IAAI,EAAE;IACnC,MAAM,UAAU,GAAG,YAAY,CAAC,IAAI,CAAC;IAErC,IAAI,UAAU,CAAC,IAAI,EAAE;MACnB,OAAO,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;IACzC;IAEE,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;EACtC;;EAEA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,WAAW,CAAC,KAAK,EAAE;IAC1B,OAAO,KAAK;EACd;;EAEA;AACA;AACA;AACA;AACA;EACA,SAAS,aAAa,CAAA,EAAG;IACvB,OAAO,EAAE;EACX;;EAEA;AACA;AACA;AACA;AACA;EACA,SAAS,WAAW,CAAA,EAAG;IACrB,OAAO,IAAI,GAAG,CAAA,CAAE;EAClB;;EAEA;AACA;AACA;AACA;AACA;EACA,SAAS,cAAc,CAAA,EAAG;IACxB,OAAO,CAAA,CAAE;EACX;;EAEA;AACA;AACA;AACA;AACA;EACA,SAAS,WAAW,CAAA,EAAG;IACrB,OAAO,IAAI,GAAG,CAAA,CAAE;EAClB;EAEA,IAAA,OAAA,GAAe,IAAI,GAAG,CAAC;EACvB;EACE,CAAC,aAAa,EAAE,eAAe,CAAC,EAChC,CAAC,SAAS,EAAE,WAAW,CAAC,EACxB,CAAC,QAAQ,EAAE,UAAU,CAAC,EACtB,CAAC,UAAU,EAAE,YAAY,CAAC,EAC1B,CAAC,MAAM,EAAE,QAAQ,CAAC,EAClB,CAAC,QAAQ,EAAE,UAAU,CAAC,EACtB,CAAC,QAAQ,EAAE,UAAU,CAAC,EACtB,CAAC,QAAQ,EAAE,UAAU,CAAC;EAExB;EACA;EACE,CAAC,cAAc,EAAE,cAAc,CAAC,EAChC,CAAC,cAAc,EAAE,cAAc,CAAC,EAChC,CAAC,YAAY,EAAE,cAAc,CAAC,EAC9B,CAAC,YAAY,EAAE,cAAc,CAAC,EAC9B,CAAC,WAAW,EAAE,cAAc,CAAC,EAC7B,CAAC,aAAa,EAAE,cAAc,CAAC,EAC/B,CAAC,aAAa,EAAE,cAAc,CAAC,EAC/B,CAAC,YAAY,EAAE,cAAc,CAAC,EAC9B,CAAC,mBAAmB,EAAE,cAAc,CAAC;EAEvC;EACE,CAAC,gBAAgB,EAAE,WAAW,CAAC,EAC/B,CAAC,cAAc,EAAE,WAAW,CAAC,EAC7B,CAAC,SAAS,EAAE,WAAW,CAAC,EACxB,CAAC,cAAc,EAAE,WAAW,CAAC,EAC7B,CAAC,iBAAiB,EAAE,WAAW,CAAC,EAChC,CAAC,UAAU,EAAE,WAAW,CAAC,EACzB,CAAC,QAAQ,EAAE,WAAW,CAAC;EACzB;EACE,CAAC,SAAS,EAAE,WAAW,CAAC,EACxB,CAAC,SAAS,EAAE,WAAW,CAAC;EAE1B;EACE,CAAC,SAAS,EAAE,WAAW,CAAC,EACxB,CAAC,MAAM,EAAE,WAAW,CAAC,EACrB,CAAC,QAAQ,EAAE,WAAW,CAAC,EACvB,CAAC,QAAQ,EAAE,WAAW,CAAC,EACvB,CAAC,QAAQ,EAAE,WAAW,CAAC,EACvB,CAAC,WAAW,EAAE,WAAW,CAAC;EAE5B;EACA;EACE,CAAC,WAAW,EAAE,aAAa,CAAC,EAC5B,CAAC,OAAO,EAAE,aAAa,CAAC,EACxB,CAAC,KAAK,EAAE,WAAW,CAAC,EACpB,CAAC,QAAQ,EAAE,cAAc,CAAC,EAC1B,CAAC,KAAK,EAAE,WAAW;;EAErB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EAAA,CACC,CAAC;;EC7MF;AACA;AACA;EACA,SAAS,IAAI,CAAA,EAAG,CAAA;;EAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACO,SAASC,MAAI,CAAC,KAAK,EAAkC;IAAA,IAAhC,IAAI,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;IAAA,IAAE,UAAU,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,IAAI;IACxD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,IAAI,KAAK,UAAU,EAAE;MACxD,UAAU,GAAG,IAAI;MACjB,IAAI,GAAG,IAAI;IACf;IAEE,MAAM,SAAS,GAAG,IAAI,IAAI,UAAU,CAAC,KAAK,CAAC;IAC3C,MAAM,YAAY,GAAG,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;IAE3C,IAAI,SAAS,KAAK,QAAQ,EAAE;MAC1B,MAAM,MAAM,GAAG,UAAU,CAAC,KAAK,EAAE,SAAS,CAAC;MAE3C,IAAI,MAAM,KAAK,SAAS,EAAE;QACxB,OAAO,MAAM;MACnB;IACA;;IAEA;IACE,OAAO,YAAY,GAAG,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,GAAG,KAAK;EAC9D;;EC/BA;AACA;AACA;AACA;AACA;AACA;AACA;EACe,SAAS,QAAQ,CAAC,KAAK,EAAgB;IAAA,IAAd,OAAO,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAA,CAAE;IAClD,IAAI,OAAO,OAAO,KAAK,UAAU,EAAE;MACjC,OAAO,GAAG;QACR,UAAU,EAAE;MAClB,CAAK;IACL;IAEE,MAAM;MACR;MACI;MACJ;MACA;IACA,CAAG,GAAG,OAAO;IAEX,MAAM,SAAS,GAAG,UAAU,CAAC,KAAK,CAAC;IAEnC,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,EAAE;MAC5B,OAAO,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAgB,CAAC;IAC7D;IAEE,MAAM,WAAW,GAAGA,MAAI,CAAC,KAAK,EAAE,SAAS,EAAE,UAAU,CAAC;IAEtD,MAAM,UAAU,GAAG,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,CAAC;IACtD,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC;IAEpC,OAAO,aAAa,CAAC,KAAK,EAAE,WAAW,EAAE,UAAU,EAAE,OAAmB,CAAC;EAC3E;;EAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACA,SAAS,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO,EAAE,UAAU,EAAE;IACpE,MAAM,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC;IAC9B,MAAM,WAAW,GAAGA,MAAI,CAAC,KAAK,EAAE,IAAI,CAAC;;IAEvC;IACE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;MACvB,OAAO,WAAW;IACtB;IAEE,IAAI,IAAI;IAER,QAAQ,IAAI;MACV,KAAK,WAAW;MAChB,KAAK,OAAO;QACV,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACzB;MACF,KAAK,QAAQ;QACX,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACzB,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QACjD;MACF,KAAK,KAAK;MACV,KAAK,KAAK;QACR,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA,CAAE;QACnB;IAEN;;IAEA;IACE,KAAK,IAAI,aAAa,IAAI,IAAI,EAAE;MAC9B,MAAM,eAAe,GAAG,GAAG,CAAC,KAAK,EAAE,aAAa,EAAE,IAAI,CAAC;MAEvD,IAAI,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE;QACtC;QACM,GAAG,CAAC,KAAK,EAAE,aAAa,EAAE,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,EAAE,IAAI,CAAC;MACtE,CAAK,MAAM;QACL,MAAM,mBAAmB,GAAG,UAAU,CAAC,eAAe,CAAC;QACvD,MAAM,qBAAqB,GAAGA,MAAI,CAAC,eAAe,EAAE,mBAAmB,CAAC;;QAE9E;QACM,IAAI,YAAY,CAAC,mBAAmB,CAAC,EAAE;UACrC,UAAU,CAAC,GAAG,CAAC,eAAe,EAAE,qBAAqB,CAAC;UACtD,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;QACpC;QAEM,GAAG,CACD,KAAK,EACL,aAAa,EACb,aAAa,CACX,eAAe,EACf,qBAAqB,EACrB,UAAU,EACV,OAEF,CAAC,EACD,IACR,CAAO;MACP;IACA;;IAEA;;IAEE,OAAO,KAAK;EACd","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.typeDetect = factory());\n}(this, (function () { 'use strict';\n\n/* !\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\nvar promiseExists = typeof Promise === 'function';\n\n/* eslint-disable no-undef */\nvar globalObject = typeof self === 'object' ? self : global; // eslint-disable-line id-blacklist\n\nvar symbolExists = typeof Symbol !== 'undefined';\nvar mapExists = typeof Map !== 'undefined';\nvar setExists = typeof Set !== 'undefined';\nvar weakMapExists = typeof WeakMap !== 'undefined';\nvar weakSetExists = typeof WeakSet !== 'undefined';\nvar dataViewExists = typeof DataView !== 'undefined';\nvar symbolIteratorExists = symbolExists && typeof Symbol.iterator !== 'undefined';\nvar symbolToStringTagExists = symbolExists && typeof Symbol.toStringTag !== 'undefined';\nvar setEntriesExists = setExists && typeof Set.prototype.entries === 'function';\nvar mapEntriesExists = mapExists && typeof Map.prototype.entries === 'function';\nvar setIteratorPrototype = setEntriesExists && Object.getPrototypeOf(new Set().entries());\nvar mapIteratorPrototype = mapEntriesExists && Object.getPrototypeOf(new Map().entries());\nvar arrayIteratorExists = symbolIteratorExists && typeof Array.prototype[Symbol.iterator] === 'function';\nvar arrayIteratorPrototype = arrayIteratorExists && Object.getPrototypeOf([][Symbol.iterator]());\nvar stringIteratorExists = symbolIteratorExists && typeof String.prototype[Symbol.iterator] === 'function';\nvar stringIteratorPrototype = stringIteratorExists && Object.getPrototypeOf(''[Symbol.iterator]());\nvar toStringLeftSliceLength = 8;\nvar toStringRightSliceLength = -1;\n/**\n * ### typeOf (obj)\n *\n * Uses `Object.prototype.toString` to determine the type of an object,\n * normalising behaviour across engine versions & well optimised.\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nfunction typeDetect(obj) {\n  /* ! Speed optimisation\n   * Pre:\n   *   string literal     x 3,039,035 ops/sec ±1.62% (78 runs sampled)\n   *   boolean literal    x 1,424,138 ops/sec ±4.54% (75 runs sampled)\n   *   number literal     x 1,653,153 ops/sec ±1.91% (82 runs sampled)\n   *   undefined          x 9,978,660 ops/sec ±1.92% (75 runs sampled)\n   *   function           x 2,556,769 ops/sec ±1.73% (77 runs sampled)\n   * Post:\n   *   string literal     x 38,564,796 ops/sec ±1.15% (79 runs sampled)\n   *   boolean literal    x 31,148,940 ops/sec ±1.10% (79 runs sampled)\n   *   number literal     x 32,679,330 ops/sec ±1.90% (78 runs sampled)\n   *   undefined          x 32,363,368 ops/sec ±1.07% (82 runs sampled)\n   *   function           x 31,296,870 ops/sec ±0.96% (83 runs sampled)\n   */\n  var typeofObj = typeof obj;\n  if (typeofObj !== 'object') {\n    return typeofObj;\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   null               x 28,645,765 ops/sec ±1.17% (82 runs sampled)\n   * Post:\n   *   null               x 36,428,962 ops/sec ±1.37% (84 runs sampled)\n   */\n  if (obj === null) {\n    return 'null';\n  }\n\n  /* ! Spec Conformance\n   * Test: `Object.prototype.toString.call(window)``\n   *  - Node === \"[object global]\"\n   *  - Chrome === \"[object global]\"\n   *  - Firefox === \"[object Window]\"\n   *  - PhantomJS === \"[object Window]\"\n   *  - Safari === \"[object Window]\"\n   *  - IE 11 === \"[object Window]\"\n   *  - IE Edge === \"[object Window]\"\n   * Test: `Object.prototype.toString.call(this)``\n   *  - Chrome Worker === \"[object global]\"\n   *  - Firefox Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - Safari Worker === \"[object DedicatedWorkerGlobalScope]\"\n   *  - IE 11 Worker === \"[object WorkerGlobalScope]\"\n   *  - IE Edge Worker === \"[object WorkerGlobalScope]\"\n   */\n  if (obj === globalObject) {\n    return 'global';\n  }\n\n  /* ! Speed optimisation\n   * Pre:\n   *   array literal      x 2,888,352 ops/sec ±0.67% (82 runs sampled)\n   * Post:\n   *   array literal      x 22,479,650 ops/sec ±0.96% (81 runs sampled)\n   */\n  if (\n    Array.isArray(obj) &&\n    (symbolToStringTagExists === false || !(Symbol.toStringTag in obj))\n  ) {\n    return 'Array';\n  }\n\n  // Not caching existence of `window` and related properties due to potential\n  // for `window` to be unset before tests in quasi-browser environments.\n  if (typeof window === 'object' && window !== null) {\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/multipage/browsers.html#location)\n     * WhatWG HTML$7.7.3 - The `Location` interface\n     * Test: `Object.prototype.toString.call(window.location)``\n     *  - IE <=11 === \"[object Object]\"\n     *  - IE Edge <=13 === \"[object Object]\"\n     */\n    if (typeof window.location === 'object' && obj === window.location) {\n      return 'Location';\n    }\n\n    /* ! Spec Conformance\n     * (https://html.spec.whatwg.org/#document)\n     * WhatWG HTML$3.1.1 - The `Document` object\n     * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n     *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268)\n     *       which suggests that browsers should use HTMLTableCellElement for\n     *       both TD and TH elements. WhatWG separates these.\n     *       WhatWG HTML states:\n     *         > For historical reasons, Window objects must also have a\n     *         > writable, configurable, non-enumerable property named\n     *         > HTMLDocument whose value is the Document interface object.\n     * Test: `Object.prototype.toString.call(document)``\n     *  - Chrome === \"[object HTMLDocument]\"\n     *  - Firefox === \"[object HTMLDocument]\"\n     *  - Safari === \"[object HTMLDocument]\"\n     *  - IE <=10 === \"[object Document]\"\n     *  - IE 11 === \"[object HTMLDocument]\"\n     *  - IE Edge <=13 === \"[object HTMLDocument]\"\n     */\n    if (typeof window.document === 'object' && obj === window.document) {\n      return 'Document';\n    }\n\n    if (typeof window.navigator === 'object') {\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#mimetypearray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface MimeTypeArray\n       * Test: `Object.prototype.toString.call(navigator.mimeTypes)``\n       *  - IE <=10 === \"[object MSMimeTypesCollection]\"\n       */\n      if (typeof window.navigator.mimeTypes === 'object' &&\n          obj === window.navigator.mimeTypes) {\n        return 'MimeTypeArray';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n       * WhatWG HTML$8.6.1.5 - Plugins - Interface PluginArray\n       * Test: `Object.prototype.toString.call(navigator.plugins)``\n       *  - IE <=10 === \"[object MSPluginsCollection]\"\n       */\n      if (typeof window.navigator.plugins === 'object' &&\n          obj === window.navigator.plugins) {\n        return 'PluginArray';\n      }\n    }\n\n    if ((typeof window.HTMLElement === 'function' ||\n        typeof window.HTMLElement === 'object') &&\n        obj instanceof window.HTMLElement) {\n      /* ! Spec Conformance\n      * (https://html.spec.whatwg.org/multipage/webappapis.html#pluginarray)\n      * WhatWG HTML$4.4.4 - The `blockquote` element - Interface `HTMLQuoteElement`\n      * Test: `Object.prototype.toString.call(document.createElement('blockquote'))``\n      *  - IE <=10 === \"[object HTMLBlockElement]\"\n      */\n      if (obj.tagName === 'BLOCKQUOTE') {\n        return 'HTMLQuoteElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltabledatacellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableDataCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('td'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TD') {\n        return 'HTMLTableDataCellElement';\n      }\n\n      /* ! Spec Conformance\n       * (https://html.spec.whatwg.org/#htmltableheadercellelement)\n       * WhatWG HTML$4.9.9 - The `td` element - Interface `HTMLTableHeaderCellElement`\n       * Note: Most browsers currently adher to the W3C DOM Level 2 spec\n       *       (https://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-82915075)\n       *       which suggests that browsers should use HTMLTableCellElement for\n       *       both TD and TH elements. WhatWG separates these.\n       * Test: Object.prototype.toString.call(document.createElement('th'))\n       *  - Chrome === \"[object HTMLTableCellElement]\"\n       *  - Firefox === \"[object HTMLTableCellElement]\"\n       *  - Safari === \"[object HTMLTableCellElement]\"\n       */\n      if (obj.tagName === 'TH') {\n        return 'HTMLTableHeaderCellElement';\n      }\n    }\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   Float64Array       x 625,644 ops/sec ±1.58% (80 runs sampled)\n  *   Float32Array       x 1,279,852 ops/sec ±2.91% (77 runs sampled)\n  *   Uint32Array        x 1,178,185 ops/sec ±1.95% (83 runs sampled)\n  *   Uint16Array        x 1,008,380 ops/sec ±2.25% (80 runs sampled)\n  *   Uint8Array         x 1,128,040 ops/sec ±2.11% (81 runs sampled)\n  *   Int32Array         x 1,170,119 ops/sec ±2.88% (80 runs sampled)\n  *   Int16Array         x 1,176,348 ops/sec ±5.79% (86 runs sampled)\n  *   Int8Array          x 1,058,707 ops/sec ±4.94% (77 runs sampled)\n  *   Uint8ClampedArray  x 1,110,633 ops/sec ±4.20% (80 runs sampled)\n  * Post:\n  *   Float64Array       x 7,105,671 ops/sec ±13.47% (64 runs sampled)\n  *   Float32Array       x 5,887,912 ops/sec ±1.46% (82 runs sampled)\n  *   Uint32Array        x 6,491,661 ops/sec ±1.76% (79 runs sampled)\n  *   Uint16Array        x 6,559,795 ops/sec ±1.67% (82 runs sampled)\n  *   Uint8Array         x 6,463,966 ops/sec ±1.43% (85 runs sampled)\n  *   Int32Array         x 5,641,841 ops/sec ±3.49% (81 runs sampled)\n  *   Int16Array         x 6,583,511 ops/sec ±1.98% (80 runs sampled)\n  *   Int8Array          x 6,606,078 ops/sec ±1.74% (81 runs sampled)\n  *   Uint8ClampedArray  x 6,602,224 ops/sec ±1.77% (83 runs sampled)\n  */\n  var stringTag = (symbolToStringTagExists && obj[Symbol.toStringTag]);\n  if (typeof stringTag === 'string') {\n    return stringTag;\n  }\n\n  var objPrototype = Object.getPrototypeOf(obj);\n  /* ! Speed optimisation\n  * Pre:\n  *   regex literal      x 1,772,385 ops/sec ±1.85% (77 runs sampled)\n  *   regex constructor  x 2,143,634 ops/sec ±2.46% (78 runs sampled)\n  * Post:\n  *   regex literal      x 3,928,009 ops/sec ±0.65% (78 runs sampled)\n  *   regex constructor  x 3,931,108 ops/sec ±0.58% (84 runs sampled)\n  */\n  if (objPrototype === RegExp.prototype) {\n    return 'RegExp';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   date               x 2,130,074 ops/sec ±4.42% (68 runs sampled)\n  * Post:\n  *   date               x 3,953,779 ops/sec ±1.35% (77 runs sampled)\n  */\n  if (objPrototype === Date.prototype) {\n    return 'Date';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-promise.prototype-@@tostringtag)\n   * ES6$25.4.5.4 - Promise.prototype[@@toStringTag] should be \"Promise\":\n   * Test: `Object.prototype.toString.call(Promise.resolve())``\n   *  - Chrome <=47 === \"[object Object]\"\n   *  - Edge <=20 === \"[object Object]\"\n   *  - Firefox 29-Latest === \"[object Promise]\"\n   *  - Safari 7.1-Latest === \"[object Promise]\"\n   */\n  if (promiseExists && objPrototype === Promise.prototype) {\n    return 'Promise';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   set                x 2,222,186 ops/sec ±1.31% (82 runs sampled)\n  * Post:\n  *   set                x 4,545,879 ops/sec ±1.13% (83 runs sampled)\n  */\n  if (setExists && objPrototype === Set.prototype) {\n    return 'Set';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   map                x 2,396,842 ops/sec ±1.59% (81 runs sampled)\n  * Post:\n  *   map                x 4,183,945 ops/sec ±6.59% (82 runs sampled)\n  */\n  if (mapExists && objPrototype === Map.prototype) {\n    return 'Map';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakset            x 1,323,220 ops/sec ±2.17% (76 runs sampled)\n  * Post:\n  *   weakset            x 4,237,510 ops/sec ±2.01% (77 runs sampled)\n  */\n  if (weakSetExists && objPrototype === WeakSet.prototype) {\n    return 'WeakSet';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   weakmap            x 1,500,260 ops/sec ±2.02% (78 runs sampled)\n  * Post:\n  *   weakmap            x 3,881,384 ops/sec ±1.45% (82 runs sampled)\n  */\n  if (weakMapExists && objPrototype === WeakMap.prototype) {\n    return 'WeakMap';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-dataview.prototype-@@tostringtag)\n   * ES6$24.2.4.21 - DataView.prototype[@@toStringTag] should be \"DataView\":\n   * Test: `Object.prototype.toString.call(new DataView(new ArrayBuffer(1)))``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (dataViewExists && objPrototype === DataView.prototype) {\n    return 'DataView';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%mapiteratorprototype%-@@tostringtag)\n   * ES6$23.1.5.2.2 - %MapIteratorPrototype%[@@toStringTag] should be \"Map Iterator\":\n   * Test: `Object.prototype.toString.call(new Map().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (mapExists && objPrototype === mapIteratorPrototype) {\n    return 'Map Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%setiteratorprototype%-@@tostringtag)\n   * ES6$23.2.5.2.2 - %SetIteratorPrototype%[@@toStringTag] should be \"Set Iterator\":\n   * Test: `Object.prototype.toString.call(new Set().entries())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (setExists && objPrototype === setIteratorPrototype) {\n    return 'Set Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%arrayiteratorprototype%-@@tostringtag)\n   * ES6$22.1.5.2.2 - %ArrayIteratorPrototype%[@@toStringTag] should be \"Array Iterator\":\n   * Test: `Object.prototype.toString.call([][Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (arrayIteratorExists && objPrototype === arrayIteratorPrototype) {\n    return 'Array Iterator';\n  }\n\n  /* ! Spec Conformance\n   * (http://www.ecma-international.org/ecma-262/6.0/index.html#sec-%stringiteratorprototype%-@@tostringtag)\n   * ES6$21.1.5.2.2 - %StringIteratorPrototype%[@@toStringTag] should be \"String Iterator\":\n   * Test: `Object.prototype.toString.call(''[Symbol.iterator]())``\n   *  - Edge <=13 === \"[object Object]\"\n   */\n  if (stringIteratorExists && objPrototype === stringIteratorPrototype) {\n    return 'String Iterator';\n  }\n\n  /* ! Speed optimisation\n  * Pre:\n  *   object from null   x 2,424,320 ops/sec ±1.67% (76 runs sampled)\n  * Post:\n  *   object from null   x 5,838,000 ops/sec ±0.99% (84 runs sampled)\n  */\n  if (objPrototype === null) {\n    return 'Object';\n  }\n\n  return Object\n    .prototype\n    .toString\n    .call(obj)\n    .slice(toStringLeftSliceLength, toStringRightSliceLength);\n}\n\nreturn typeDetect;\n\n})));\n","const isBufferExists = typeof Buffer !== 'undefined';\nconst isBufferFromExists = isBufferExists && typeof Buffer.from !== 'undefined';\n\nexport const isBuffer = isBufferExists\n  ? /**\n     * is value is Buffer?\n     *\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuffer(value) {\n      return Buffer.isBuffer(value);\n    }\n  : /**\n     * return false\n     *\n     * NOTE: for Buffer unsupported\n     *\n     * @return {boolean}\n     */\n    function isBuffer() {\n      return false;\n    };\n\nexport const copy = isBufferFromExists\n  ? /**\n     * copy Buffer\n     *\n     * @param {Buffer} value\n     * @return {Buffer}\n     */\n    function copy(value) {\n      return Buffer.from(value);\n    }\n  : isBufferExists\n  ? /**\n     * copy Buffer\n     *\n     * NOTE: for old node.js\n     *\n     * @param {Buffer} value\n     * @return {Buffer}\n     */\n    function copy(value) {\n      return new Buffer(value);\n    }\n  : /**\n     * shallow copy\n     *\n     * NOTE: for Buffer unsupported\n     *\n     * @param {*}\n     * @return {*}\n     */\n    function copy(value) {\n      return value;\n    };\n","import typeDetect from 'type-detect';\n\nimport { isBuffer } from './buffer.mjs';\n\n/**\n * detect type of value\n *\n * @param {*} value\n * @return {string}\n */\nexport function detectType(value) {\n  // NOTE: isBuffer must execute before type-detect,\n  // because type-detect returns 'Uint8Array'.\n  if (isBuffer(value)) {\n    return 'Buffer';\n  }\n\n  return typeDetect(value);\n}\n","import { detectType } from './detector.mjs';\n\n/**\n * collection types\n */\nconst collectionTypeSet = new Set([\n  'Arguments',\n  'Array',\n  'Map',\n  'Object',\n  'Set'\n]);\n\n/**\n * get value from collection\n *\n * @param {Array|Object|Map|Set} collection\n * @param {string|number|symbol} key\n * @param {string} [type=null]\n * @return {*}\n */\nexport function get(collection, key, type = null) {\n  const valueType = type || detectType(collection);\n\n  switch (valueType) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      return collection[key];\n    case 'Map':\n      return collection.get(key);\n    case 'Set':\n      // NOTE: Set.prototype.keys is alias of Set.prototype.values\n      // it means key is equals value\n      return key;\n    default:\n  }\n}\n\n/**\n * check to type string is collection\n *\n * @param {string} type\n */\nexport function isCollection(type) {\n  return collectionTypeSet.has(type);\n}\n\n/**\n * set value to collection\n *\n * @param {Array|Object|Map|Set} collection\n * @param {string|number|symbol} key\n * @param {*} value\n * @param {string} [type=null]\n * @return {Array|Object|Map|Set}\n */\nexport function set(collection, key, value, type = null) {\n  const valueType = type || detectType(collection);\n\n  switch (valueType) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      collection[key] = value;\n      break;\n    case 'Map':\n      collection.set(key, value);\n      break;\n    case 'Set':\n      collection.add(value);\n      break;\n    default:\n  }\n\n  return collection;\n}\n","const freeGlobalThis =\n  typeof globalThis !== 'undefined' &&\n  globalThis !== null &&\n  globalThis.Object === Object &&\n  globalThis;\n\nconst freeGlobal =\n  typeof global !== 'undefined' &&\n  global !== null &&\n  global.Object === Object &&\n  global;\n\nconst freeSelf =\n  typeof self !== 'undefined' &&\n  self !== null &&\n  self.Object === Object &&\n  self;\n\nexport const globalObject =\n  freeGlobalThis || freeGlobal || freeSelf || Function('return this')();\n","import { copy as cloneBuffer } from './buffer.mjs';\nimport { globalObject } from './global.mjs';\n\n/**\n * copy ArrayBuffer\n *\n * @param {ArrayBuffer} value\n * @return {ArrayBuffer}\n */\nfunction copyArrayBuffer(value) {\n  return value.slice(0);\n}\n\n/**\n * copy Boolean\n *\n * @param {Boolean} value\n * @return {Boolean}\n */\nfunction copyBoolean(value) {\n  return new Boolean(value.valueOf());\n}\n\n/**\n * copy DataView\n *\n * @param {DataView} value\n * @return {DataView}\n */\nfunction copyDataView(value) {\n  // TODO: copy ArrayBuffer?\n  return new DataView(value.buffer);\n}\n\n/**\n * copy Buffer\n *\n * @param {Buffer} value\n * @return {Buffer}\n */\nfunction copyBuffer(value) {\n  return cloneBuffer(value);\n}\n\n/**\n * copy Date\n *\n * @param {Date} value\n * @return {Date}\n */\nfunction copyDate(value) {\n  return new Date(value.getTime());\n}\n\n/**\n * copy Number\n *\n * @param {Number} value\n * @return {Number}\n */\nfunction copyNumber(value) {\n  return new Number(value);\n}\n\n/**\n * copy RegExp\n *\n * @param {RegExp} value\n * @return {RegExp}\n */\nfunction copyRegExp(value) {\n  return new RegExp(value.source, value.flags);\n}\n\n/**\n * copy String\n *\n * @param {String} value\n * @return {String}\n */\nfunction copyString(value) {\n  return new String(value);\n}\n\n/**\n * copy TypedArray\n *\n * @param {*} value\n * @return {*}\n */\nfunction copyTypedArray(value, type) {\n  const typedArray = globalObject[type];\n\n  if (typedArray.from) {\n    return globalObject[type].from(value);\n  }\n\n  return new globalObject[type](value);\n}\n\n/**\n * shallow copy\n *\n * @param {*} value\n * @return {*}\n */\nfunction shallowCopy(value) {\n  return value;\n}\n\n/**\n * get empty Array\n *\n * @return {Array}\n */\nfunction getEmptyArray() {\n  return [];\n}\n\n/**\n * get empty Map\n *\n * @return {Map}\n */\nfunction getEmptyMap() {\n  return new Map();\n}\n\n/**\n * get empty Object\n *\n * @return {Object}\n */\nfunction getEmptyObject() {\n  return {};\n}\n\n/**\n * get empty Set\n *\n * @return {Set}\n */\nfunction getEmptySet() {\n  return new Set();\n}\n\nexport default new Map([\n  // deep copy\n  ['ArrayBuffer', copyArrayBuffer],\n  ['Boolean', copyBoolean],\n  ['Buffer', copyBuffer],\n  ['DataView', copyDataView],\n  ['Date', copyDate],\n  ['Number', copyNumber],\n  ['RegExp', copyRegExp],\n  ['String', copyString],\n\n  // typed arrays\n  // TODO: pass bound function\n  ['Float32Array', copyTypedArray],\n  ['Float64Array', copyTypedArray],\n  ['Int16Array', copyTypedArray],\n  ['Int32Array', copyTypedArray],\n  ['Int8Array', copyTypedArray],\n  ['Uint16Array', copyTypedArray],\n  ['Uint32Array', copyTypedArray],\n  ['Uint8Array', copyTypedArray],\n  ['Uint8ClampedArray', copyTypedArray],\n\n  // shallow copy\n  ['Array Iterator', shallowCopy],\n  ['Map Iterator', shallowCopy],\n  ['Promise', shallowCopy],\n  ['Set Iterator', shallowCopy],\n  ['String Iterator', shallowCopy],\n  ['function', shallowCopy],\n  ['global', shallowCopy],\n  // NOTE: WeakMap and WeakSet cannot get entries\n  ['WeakMap', shallowCopy],\n  ['WeakSet', shallowCopy],\n\n  // primitives\n  ['boolean', shallowCopy],\n  ['null', shallowCopy],\n  ['number', shallowCopy],\n  ['string', shallowCopy],\n  ['symbol', shallowCopy],\n  ['undefined', shallowCopy],\n\n  // collections\n  // NOTE: return empty value, because recursively copy later.\n  ['Arguments', getEmptyArray],\n  ['Array', getEmptyArray],\n  ['Map', getEmptyMap],\n  ['Object', getEmptyObject],\n  ['Set', getEmptySet]\n\n  // NOTE: type-detect returns following types\n  // 'Location'\n  // 'Document'\n  // 'MimeTypeArray'\n  // 'PluginArray'\n  // 'HTMLQuoteElement'\n  // 'HTMLTableDataCellElement'\n  // 'HTMLTableHeaderCellElement'\n\n  // TODO: is type-detect never return 'object'?\n  // 'object'\n]);\n","import copyMap from './copy_map.mjs';\nimport { detectType } from './detector.mjs';\n\n/**\n * no operation\n */\nfunction noop() {}\n\n/**\n * copy value\n *\n * @param {*} value\n * @param {string} [type=null]\n * @param {Function} [customizer=noop]\n * @return {*}\n */\nexport function copy(value, type = null, customizer = noop) {\n  if (arguments.length === 2 && typeof type === 'function') {\n    customizer = type;\n    type = null;\n  }\n\n  const valueType = type || detectType(value);\n  const copyFunction = copyMap.get(valueType);\n\n  if (valueType === 'Object') {\n    const result = customizer(value, valueType);\n\n    if (result !== undefined) {\n      return result;\n    }\n  }\n\n  // NOTE: TypedArray needs pass type to argument\n  return copyFunction ? copyFunction(value, valueType) : value;\n}\n","import { detectType } from './detector.mjs';\nimport { get, isCollection, set } from './collection.mjs';\nimport { copy } from './copier.mjs';\n\n/**\n * deepcopy function\n *\n * @param {*} value\n * @param {Object|Function} [options]\n * @return {*}\n */\nexport default function deepcopy(value, options = {}) {\n  if (typeof options === 'function') {\n    options = {\n      customizer: options\n    };\n  }\n\n  const {\n    // TODO: before/after customizer\n    customizer\n    // TODO: max depth\n    // depth = Infinity,\n  } = options;\n\n  const valueType = detectType(value);\n\n  if (!isCollection(valueType)) {\n    return recursiveCopy(value, null, null, null, customizer);\n  }\n\n  const copiedValue = copy(value, valueType, customizer);\n\n  const references = new WeakMap([[value, copiedValue]]);\n  const visited = new WeakSet([value]);\n\n  return recursiveCopy(value, copiedValue, references, visited, customizer);\n}\n\n/**\n * recursively copy\n *\n * @param {*} value target value\n * @param {*} clone clone of value\n * @param {WeakMap} references visited references of clone\n * @param {WeakSet} visited visited references of value\n * @param {Function} customizer user customize function\n * @return {*}\n */\nfunction recursiveCopy(value, clone, references, visited, customizer) {\n  const type = detectType(value);\n  const copiedValue = copy(value, type);\n\n  // return if not a collection value\n  if (!isCollection(type)) {\n    return copiedValue;\n  }\n\n  let keys;\n\n  switch (type) {\n    case 'Arguments':\n    case 'Array':\n      keys = Object.keys(value);\n      break;\n    case 'Object':\n      keys = Object.keys(value);\n      keys.push(...Object.getOwnPropertySymbols(value));\n      break;\n    case 'Map':\n    case 'Set':\n      keys = value.keys();\n      break;\n    default:\n  }\n\n  // walk within collection with iterator\n  for (let collectionKey of keys) {\n    const collectionValue = get(value, collectionKey, type);\n\n    if (visited.has(collectionValue)) {\n      // for [Circular]\n      set(clone, collectionKey, references.get(collectionValue), type);\n    } else {\n      const collectionValueType = detectType(collectionValue);\n      const copiedCollectionValue = copy(collectionValue, collectionValueType);\n\n      // save reference if value is collection\n      if (isCollection(collectionValueType)) {\n        references.set(collectionValue, copiedCollectionValue);\n        visited.add(collectionValue);\n      }\n\n      set(\n        clone,\n        collectionKey,\n        recursiveCopy(\n          collectionValue,\n          copiedCollectionValue,\n          references,\n          visited,\n          customizer\n        ),\n        type\n      );\n    }\n  }\n\n  // TODO: isSealed/isFrozen/isExtensible\n\n  return clone;\n}\n"]},"metadata":{},"sourceType":"script"}