{"ast":null,"code":"var _jsxFileName = \"/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/taskModal/modalComponents/toDoLists/ToDoInput.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Button, ClickAwayListener, InputBase, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  textfieldOpen: {\n    backgroundColor: '#fff',\n    border: \"2px solid \".concat(theme.palette.primary.main),\n    width: '100%',\n    display: 'flex',\n    alignItems: 'flex-start',\n    borderRadius: 5,\n    '& textarea': {\n      minHeight: 40,\n      padding: '0 8px 5px 8px'\n    }\n  },\n  initialTitleOpen: {\n    backgroundColor: '#e6e6e6',\n    border: \"1px solid #cbcbcb\",\n    width: '100%',\n    display: 'flex',\n    alignItems: 'flex-start',\n    borderRadius: 5,\n    '& textarea': {\n      minHeight: 40,\n      padding: '0 8px 5px 8px'\n    }\n  },\n  finishedText: {\n    color: '#6a6a6a',\n    textDecoration: 'line-through'\n  },\n  buttonsContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 10,\n    '& > svg': {\n      cursor: 'pointer',\n      marginLeft: 5\n    }\n  }\n}));\nconst ToDoInput = _ref => {\n  _s();\n  let {\n    initialTitle = '',\n    taskFinished = false,\n    taskId = false,\n    taskIndex,\n    updateTaskTitleHandle,\n    addTaskHandle,\n    disabled\n  } = _ref;\n  const [open, setOpen] = useState(false);\n  const [focused, setFocused] = useState(false);\n  const [title, setTitle] = useState(initialTitle);\n  const inputRef = useRef();\n  const classes = useStyles();\n  useEffect(() => !open && setTitle(initialTitle), [open, initialTitle]);\n  const closeHandle = () => {\n    setOpen(false);\n    if (initialTitle) {\n      setTitle(initialTitle);\n      focused && inputRef.current.blur();\n    }\n  };\n  const addTaskCallback = () => {\n    setTitle('');\n  };\n  const focusInput = () => {\n    setFocused(true);\n    setOpen(true);\n    setTimeout(() => inputRef.current.select(), 1);\n  };\n  const actionHandle = () => {\n    if (title.trim() !== '') taskId ? updateTaskTitleHandle(taskId, title, taskIndex, () => setOpen(false)) : addTaskHandle(title, addTaskCallback);\n  };\n  const keyPressHandle = e => {\n    if (e.key === 'Escape') {\n      inputRef.current.blur();\n      closeHandle();\n    } else if (e.key === 'Enter') {\n      e.preventDefault();\n      actionHandle();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: !taskId && '10px 40px 0',\n      width: taskId ? '100%' : '90%'\n    },\n    children: [!taskId && !open && /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      onClick: focusInput,\n      disabled: disabled,\n      children: \"Add task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClickAwayListener, {\n      onClickAway: e => open && !focused && closeHandle(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [(open || taskId) && /*#__PURE__*/_jsxDEV(InputBase, {\n          inputRef: inputRef,\n          className: open ? taskId ? classes.initialTitleOpen : classes.textfieldOpen : taskFinished ? classes.finishedText : '',\n          style: {\n            fontSize: 14,\n            cursor: !open && taskId && !disabled && 'pointer'\n          },\n          fullWidth: true,\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          variant: \"outlined\",\n          onFocus: !disabled && focusInput,\n          onClick: () => !disabled && setOpen(true),\n          inputProps: {\n            spellCheck: false,\n            style: {\n              cursor: !open && taskId && !disabled && 'pointer'\n            }\n          },\n          onBlur: () => setFocused(false),\n          multiline: true,\n          onKeyDown: keyPressHandle,\n          placeholder: !taskId ? 'Add task' : '',\n          disabled: disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.buttonsContainer,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"contained\",\n            size: \"small\",\n            onClick: actionHandle,\n            children: taskId ? 'Save' : 'Add'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n            onClick: closeHandle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(ToDoInput, \"gyF203fuAjbJO++6yIwQGm2Ngh8=\", false, function () {\n  return [useStyles];\n});\n_c = ToDoInput;\nexport default ToDoInput;\nvar _c;\n$RefreshReg$(_c, \"ToDoInput\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Button","ClickAwayListener","InputBase","makeStyles","CloseIcon","jsxDEV","_jsxDEV","useStyles","theme","textfieldOpen","backgroundColor","border","concat","palette","primary","main","width","display","alignItems","borderRadius","minHeight","padding","initialTitleOpen","finishedText","color","textDecoration","buttonsContainer","marginTop","cursor","marginLeft","ToDoInput","_ref","_s","initialTitle","taskFinished","taskId","taskIndex","updateTaskTitleHandle","addTaskHandle","disabled","open","setOpen","focused","setFocused","title","setTitle","inputRef","classes","closeHandle","current","blur","addTaskCallback","focusInput","setTimeout","select","actionHandle","trim","keyPressHandle","e","key","preventDefault","style","margin","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onClickAway","className","fontSize","fullWidth","value","onChange","target","variant","onFocus","inputProps","spellCheck","onBlur","multiline","onKeyDown","placeholder","size","_c","$RefreshReg$"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/taskModal/modalComponents/toDoLists/ToDoInput.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nimport {\n  Button,\n  ClickAwayListener,\n  InputBase,\n  makeStyles,\n} from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) => ({\n  textfieldOpen: {\n    backgroundColor: '#fff',\n    border: `2px solid ${theme.palette.primary.main}`,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'flex-start',\n    borderRadius: 5,\n    '& textarea': {\n      minHeight: 40,\n      padding: '0 8px 5px 8px',\n    },\n  },\n  initialTitleOpen: {\n    backgroundColor: '#e6e6e6',\n    border: `1px solid #cbcbcb`,\n    width: '100%',\n    display: 'flex',\n    alignItems: 'flex-start',\n    borderRadius: 5,\n    '& textarea': {\n      minHeight: 40,\n      padding: '0 8px 5px 8px',\n    },\n  },\n  finishedText: {\n    color: '#6a6a6a',\n    textDecoration: 'line-through',\n  },\n  buttonsContainer: {\n    display: 'flex',\n    alignItems: 'center',\n    marginTop: 10,\n    '& > svg': {\n      cursor: 'pointer',\n      marginLeft: 5,\n    },\n  },\n}));\n\nconst ToDoInput = ({\n  initialTitle = '',\n  taskFinished = false,\n  taskId = false,\n  taskIndex,\n  updateTaskTitleHandle,\n  addTaskHandle,\n  disabled,\n}) => {\n  const [open, setOpen] = useState(false);\n  const [focused, setFocused] = useState(false);\n  const [title, setTitle] = useState(initialTitle);\n  const inputRef = useRef();\n  const classes = useStyles();\n\n  useEffect(() => !open && setTitle(initialTitle), [open, initialTitle]);\n\n  const closeHandle = () => {\n    setOpen(false);\n    if (initialTitle) {\n      setTitle(initialTitle);\n      focused && inputRef.current.blur();\n    }\n  };\n\n  const addTaskCallback = () => {\n    setTitle('');\n  };\n\n  const focusInput = () => {\n    setFocused(true);\n    setOpen(true);\n    setTimeout(() => inputRef.current.select(), 1);\n  };\n\n  const actionHandle = () => {\n    if (title.trim() !== '')\n      taskId\n        ? updateTaskTitleHandle(taskId, title, taskIndex, () => setOpen(false))\n        : addTaskHandle(title, addTaskCallback);\n  };\n\n  const keyPressHandle = (e) => {\n    if (e.key === 'Escape') {\n      inputRef.current.blur();\n      closeHandle();\n    } else if (e.key === 'Enter') {\n      e.preventDefault();\n      actionHandle();\n    }\n  };\n\n  return (\n    <div\n      style={{\n        margin: !taskId && '10px 40px 0',\n        width: taskId ? '100%' : '90%',\n      }}\n    >\n      {!taskId && !open && (\n        <Button color='primary' onClick={focusInput} disabled={disabled}>\n          Add task\n        </Button>\n      )}\n      <ClickAwayListener onClickAway={(e) => open && !focused && closeHandle()}>\n        <div>\n          {(open || taskId) && (\n            <InputBase\n              inputRef={inputRef}\n              className={\n                open\n                  ? taskId\n                    ? classes.initialTitleOpen\n                    : classes.textfieldOpen\n                  : taskFinished\n                  ? classes.finishedText\n                  : ''\n              }\n              style={{\n                fontSize: 14,\n                cursor: !open && taskId && !disabled && 'pointer',\n              }}\n              fullWidth\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              variant='outlined'\n              onFocus={!disabled && focusInput}\n              onClick={() => !disabled && setOpen(true)}\n              inputProps={{\n                spellCheck: false,\n                style: { cursor: !open && taskId && !disabled && 'pointer' },\n              }}\n              onBlur={() => setFocused(false)}\n              multiline\n              onKeyDown={keyPressHandle}\n              placeholder={!taskId ? 'Add task' : ''}\n              disabled={disabled}\n            />\n          )}\n          {open && (\n            <div className={classes.buttonsContainer}>\n              <Button\n                color='primary'\n                variant='contained'\n                size='small'\n                onClick={actionHandle}\n              >\n                {taskId ? 'Save' : 'Add'}\n              </Button>\n              <CloseIcon onClick={closeHandle} />\n            </div>\n          )}\n        </div>\n      </ClickAwayListener>\n    </div>\n  );\n};\n\nexport default ToDoInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}