{"ast":null,"code":"var _jsxFileName = \"/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/taskModal/modalComponents/Deadline.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { taskFieldUpdate } from '../../../../redux/actions/projectActions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport Loader from '../../../Loader';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  header: {\n    marginTop: 20,\n    display: 'flex',\n    alignItems: 'center',\n    '& > svg': {\n      marginRight: 15\n    }\n  },\n  datePicker: props => ({\n    position: 'relative',\n    width: 110,\n    '& input': {\n      cursor: !props.disabled && 'pointer'\n    }\n  }),\n  primary: {\n    '& .MuiInputLabel-formControl': {\n      color: theme.palette.primary.main\n    },\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderWidth: 2,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  secondary: {\n    '& .MuiInputLabel-formControl': {\n      color: theme.palette.secondary.main\n    },\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderWidth: 2,\n      borderColor: theme.palette.secondary.main\n    }\n  },\n  pickerDisabled: {\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderWidth: 2,\n      borderColor: '#ccc'\n    }\n  }\n}));\nconst Deadline = _ref => {\n  _s();\n  let {\n    task,\n    disabled\n  } = _ref;\n  const dispatch = useDispatch();\n  const [deadlineClose, setDeadlineClose] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles({\n    disabled\n  });\n  useEffect(() => {\n    if (task.deadline !== null) {\n      const now = moment(new Date());\n      const date = moment(task.deadline);\n      const diff = now.diff(date, 'hours');\n      diff >= -23 ? setDeadlineClose(true) : setDeadlineClose(false);\n    }\n  }, [task.deadline]);\n  const deadlineHandle = date => {\n    if (date !== null) {\n      const diff = moment(new Date()).diff(moment(date), 'hours');\n      // show red color if deadline is close\n      diff >= -23 ? setDeadlineClose(true) : setDeadlineClose(false);\n    }\n    setLoading(true);\n    dispatch(taskFieldUpdate(task._id, task.projectId, date, 'deadline', () => setLoading(false)));\n  };\n  return task.deadline && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.header,\n    children: [/*#__PURE__*/_jsxDEV(ScheduleIcon, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n      utils: DateFnsUtils,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.datePicker,\n        children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n          clearable: true,\n          disabled: loading || disabled,\n          className: loading ? classes.pickerDisabled : deadlineClose ? classes.secondary : classes.primary,\n          label: \"Deadline\",\n          inputVariant: \"outlined\",\n          format: \"MM/dd/yyyy\",\n          value: task.deadline,\n          onChange: deadlineHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {\n          button: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n};\n_s(Deadline, \"zfBP/aTlh6MEmFwvIgKSzFNrN/0=\", false, function () {\n  return [useDispatch, useStyles];\n});\n_c = Deadline;\nexport default Deadline;\nvar _c;\n$RefreshReg$(_c, \"Deadline\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","taskFieldUpdate","makeStyles","ScheduleIcon","MuiPickersUtilsProvider","DatePicker","DateFnsUtils","Loader","moment","jsxDEV","_jsxDEV","useStyles","theme","header","marginTop","display","alignItems","marginRight","datePicker","props","position","width","cursor","disabled","primary","color","palette","main","borderWidth","borderColor","secondary","pickerDisabled","Deadline","_ref","_s","task","dispatch","deadlineClose","setDeadlineClose","loading","setLoading","classes","deadline","now","Date","date","diff","deadlineHandle","_id","projectId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","utils","clearable","label","inputVariant","format","value","onChange","button","_c","$RefreshReg$"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/taskModal/modalComponents/Deadline.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { taskFieldUpdate } from '../../../../redux/actions/projectActions';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nimport { MuiPickersUtilsProvider, DatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nimport Loader from '../../../Loader';\n\nimport moment from 'moment';\n\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    marginTop: 20,\n    display: 'flex',\n    alignItems: 'center',\n    '& > svg': {\n      marginRight: 15,\n    },\n  },\n  datePicker: (props) => ({\n    position: 'relative',\n    width: 110,\n    '& input': {\n      cursor: !props.disabled && 'pointer',\n    },\n  }),\n  primary: {\n    '& .MuiInputLabel-formControl': {\n      color: theme.palette.primary.main,\n    },\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderWidth: 2,\n      borderColor: theme.palette.primary.main,\n    },\n  },\n  secondary: {\n    '& .MuiInputLabel-formControl': {\n      color: theme.palette.secondary.main,\n    },\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderWidth: 2,\n      borderColor: theme.palette.secondary.main,\n    },\n  },\n  pickerDisabled: {\n    '& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline': {\n      borderWidth: 2,\n      borderColor: '#ccc',\n    },\n  },\n}));\n\nconst Deadline = ({ task, disabled }) => {\n  const dispatch = useDispatch();\n  const [deadlineClose, setDeadlineClose] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const classes = useStyles({ disabled });\n\n  useEffect(() => {\n    if (task.deadline !== null) {\n      const now = moment(new Date());\n      const date = moment(task.deadline);\n      const diff = now.diff(date, 'hours');\n      diff >= -23 ? setDeadlineClose(true) : setDeadlineClose(false);\n    }\n  }, [task.deadline]);\n\n  const deadlineHandle = (date) => {\n    if (date !== null) {\n      const diff = moment(new Date()).diff(moment(date), 'hours');\n      // show red color if deadline is close\n      diff >= -23 ? setDeadlineClose(true) : setDeadlineClose(false);\n    }\n    setLoading(true);\n    dispatch(\n      taskFieldUpdate(task._id, task.projectId, date, 'deadline', () =>\n        setLoading(false)\n      )\n    );\n  };\n\n  return (\n    task.deadline && (\n      <div className={classes.header}>\n        <ScheduleIcon color='primary' />\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <div className={classes.datePicker}>\n            <DatePicker\n              clearable\n              disabled={loading || disabled}\n              className={\n                loading\n                  ? classes.pickerDisabled\n                  : deadlineClose\n                  ? classes.secondary\n                  : classes.primary\n              }\n              label='Deadline'\n              inputVariant='outlined'\n              format='MM/dd/yyyy'\n              value={task.deadline}\n              onChange={deadlineHandle}\n            />\n            {loading && <Loader button />}\n          </div>\n        </MuiPickersUtilsProvider>\n      </div>\n    )\n  );\n};\n\nexport default Deadline;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}