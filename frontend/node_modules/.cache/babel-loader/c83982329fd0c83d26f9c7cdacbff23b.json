{"ast":null,"code":"var _jsxFileName = \"/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/layout/navComponents/notifications/Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { markNotificationsSeen } from '../../../../redux/actions/userActions';\nimport { IconButton, Badge } from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsMenu from './NotificationsMenu';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const {\n    notifications\n  } = useSelector(state => state.userLogin);\n  const [anchorEl, setAnchorEl] = useState();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (notifications && notifications.newNotificationsCount !== 0 && anchorEl) {\n      dispatch(markNotificationsSeen());\n    }\n  }, [dispatch, notifications, anchorEl]);\n  const openNotificationsHandle = e => {\n    setAnchorEl(e.currentTarget);\n    if (notifications && notifications.newNotificationsCount !== 0) {\n      dispatch(markNotificationsSeen());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"inherit\",\n      onClick: openNotificationsHandle,\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        badgeContent: notifications && notifications.newNotificationsCount,\n        color: \"secondary\",\n        children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationsMenu, {\n      anchorEl: anchorEl,\n      handleClose: () => setAnchorEl(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Notifications, \"CoNkKeHbzLx5jhmJ92gX8/jq7Fk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","markNotificationsSeen","IconButton","Badge","NotificationsIcon","NotificationsMenu","jsxDEV","_jsxDEV","Fragment","_Fragment","Notifications","_s","notifications","state","userLogin","anchorEl","setAnchorEl","dispatch","newNotificationsCount","openNotificationsHandle","e","currentTarget","children","color","onClick","badgeContent","fileName","_jsxFileName","lineNumber","columnNumber","handleClose","_c","$RefreshReg$"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/layout/navComponents/notifications/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { markNotificationsSeen } from '../../../../redux/actions/userActions';\n\nimport { IconButton, Badge } from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\n\nimport NotificationsMenu from './NotificationsMenu';\n\nconst Notifications = () => {\n  const { notifications } = useSelector((state) => state.userLogin);\n  const [anchorEl, setAnchorEl] = useState();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\n      notifications &&\n      notifications.newNotificationsCount !== 0 &&\n      anchorEl\n    ) {\n      dispatch(markNotificationsSeen());\n    }\n  }, [dispatch, notifications, anchorEl]);\n\n  const openNotificationsHandle = (e) => {\n    setAnchorEl(e.currentTarget);\n    if (notifications && notifications.newNotificationsCount !== 0) {\n      dispatch(markNotificationsSeen());\n    }\n  };\n\n  return (\n    <>\n      <IconButton color='inherit' onClick={openNotificationsHandle}>\n        <Badge\n          badgeContent={notifications && notifications.newNotificationsCount}\n          color='secondary'\n        >\n          <NotificationsIcon />\n        </Badge>\n      </IconButton>\n      <NotificationsMenu\n        anchorEl={anchorEl}\n        handleClose={() => setAnchorEl(null)}\n      />\n    </>\n  );\n};\n\nexport default Notifications;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAElD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,qBAAqB,QAAQ,uCAAuC;AAE7E,SAASC,UAAU,EAAEC,KAAK,QAAQ,mBAAmB;AACrD,OAAOC,iBAAiB,MAAM,kCAAkC;AAEhE,OAAOC,iBAAiB,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM;IAAEC;EAAc,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACC,SAAS,CAAC;EACjE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,CAAC;EAC1C,MAAMmB,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,IACEe,aAAa,IACbA,aAAa,CAACM,qBAAqB,KAAK,CAAC,IACzCH,QAAQ,EACR;MACAE,QAAQ,CAAChB,qBAAqB,CAAC,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,CAACgB,QAAQ,EAAEL,aAAa,EAAEG,QAAQ,CAAC,CAAC;EAEvC,MAAMI,uBAAuB,GAAIC,CAAC,IAAK;IACrCJ,WAAW,CAACI,CAAC,CAACC,aAAa,CAAC;IAC5B,IAAIT,aAAa,IAAIA,aAAa,CAACM,qBAAqB,KAAK,CAAC,EAAE;MAC9DD,QAAQ,CAAChB,qBAAqB,CAAC,CAAC,CAAC;IACnC;EACF,CAAC;EAED,oBACEM,OAAA,CAAAE,SAAA;IAAAa,QAAA,gBACEf,OAAA,CAACL,UAAU;MAACqB,KAAK,EAAC,SAAS;MAACC,OAAO,EAAEL,uBAAwB;MAAAG,QAAA,eAC3Df,OAAA,CAACJ,KAAK;QACJsB,YAAY,EAAEb,aAAa,IAAIA,aAAa,CAACM,qBAAsB;QACnEK,KAAK,EAAC,WAAW;QAAAD,QAAA,eAEjBf,OAAA,CAACH,iBAAiB;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACbtB,OAAA,CAACF,iBAAiB;MAChBU,QAAQ,EAAEA,QAAS;MACnBe,WAAW,EAAEA,CAAA,KAAMd,WAAW,CAAC,IAAI;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAAClB,EAAA,CAtCID,aAAa;EAAA,QACSV,WAAW,EAEpBD,WAAW;AAAA;AAAAgC,EAAA,GAHxBrB,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}