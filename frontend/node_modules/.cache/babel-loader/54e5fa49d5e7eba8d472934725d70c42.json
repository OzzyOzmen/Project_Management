{"ast":null,"code":"import { USER_EMAIL_CONFIRM_FAIL, USER_EMAIL_CONFIRM_REQUEST, USER_EMAIL_CONFIRM_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_EMAIL_RESEND_REQUEST, USER_EMAIL_RESEND_SUCCESS, USER_EMAIL_RESEND_FAIL, USER_NOTIFICATIONS_UPDATE, USER_PICTURE_UPDATE_REQUEST, USER_PICTURE_UPDATE_SUCCESS, USER_PICTURE_UPDATE_FAIL, USER_DATA_UPDATE, USER_PROJECT_BG_UPDATE_FAIL, USER_PROJECT_BG_UPDATE_SUCCESS, USER_PROJECT_BG_UPDATE_REQUEST } from '../constants/userConstants';\nimport { SOCKET_CONNECT_RESET, SOCKET_CONNECT_SUCCESS } from '../constants/socketConstants';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n\n    // connect to socket server\n    const socket = io.connect(window && window.location.origin, {\n      transports: ['websocket', 'polling', 'flashsocket'],\n      auth: {\n        authorization: \"Bearer \".concat(data.userInfo.token)\n      }\n    });\n    socket.on('connect', () => {\n      dispatch({\n        type: SOCKET_CONNECT_SUCCESS,\n        payload: socket\n      });\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      socket.emit('join-notifications', {\n        room: data.userInfo._id\n      });\n    });\n    localStorage.setItem('userInfo', JSON.stringify({\n      token: data.userInfo.token\n    }));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const register = (username, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      username,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => async (dispatch, getState) => {\n  const {\n    socketConnection: {\n      socket\n    }\n  } = getState();\n  // window.location = '/login'\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  socket.disconnect();\n  dispatch({\n    type: SOCKET_CONNECT_RESET\n  });\n};\nexport const confirmEmail = emailCode => async dispatch => {\n  try {\n    dispatch({\n      type: USER_EMAIL_CONFIRM_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/confirm', {\n      emailCode\n    }, config);\n    dispatch({\n      type: USER_EMAIL_CONFIRM_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_EMAIL_CONFIRM_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const resendEmail = emailCode => async dispatch => {\n  try {\n    dispatch({\n      type: USER_EMAIL_RESEND_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/resend', {\n      emailCode\n    }, config);\n    dispatch({\n      type: USER_EMAIL_RESEND_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_EMAIL_RESEND_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserData = token => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        Authorization: \"Bearer \".concat(token)\n      }\n    };\n    const {\n      data\n    } = await axios.get('/api/users', config);\n\n    // connect to socket server\n    const socket = io.connect(window && window.location.origin, {\n      transports: ['websocket', 'polling', 'flashsocket'],\n      auth: {\n        authorization: \"Bearer \".concat(data.userInfo.token)\n      }\n    });\n    socket.on('connect', () => {\n      dispatch({\n        type: SOCKET_CONNECT_SUCCESS,\n        payload: socket\n      });\n      dispatch({\n        type: USER_LOGIN_SUCCESS,\n        payload: data\n      });\n      socket.emit('join-notifications', {\n        room: data.userInfo._id\n      });\n    });\n  } catch (error) {\n    localStorage.removeItem('userInfo');\n    dispatch({\n      type: USER_LOGOUT\n    });\n  }\n};\nexport const getUpdatedNotifications = () => async (dispatch, getState) => {\n  const {\n    userLogin: {\n      userInfo\n    }\n  } = getState();\n  const config = {\n    headers: {\n      Authorization: \"Bearer \".concat(userInfo.token)\n    }\n  };\n  const {\n    data\n  } = await axios.get('/api/users/notifications', config);\n  dispatch({\n    type: USER_NOTIFICATIONS_UPDATE,\n    payload: data.notifications\n  });\n};\nexport const discardNotification = (notificationId, notificationIndex, callback) => async (dispatch, getState) => {\n  const {\n    userLogin: {\n      userInfo,\n      notifications\n    }\n  } = getState();\n  const config = {\n    headers: {\n      Authorization: \"Bearer \".concat(userInfo.token)\n    }\n  };\n  notifications.items.splice(notificationIndex, 1);\n  dispatch({\n    type: USER_NOTIFICATIONS_UPDATE,\n    payload: notifications\n  });\n  callback();\n  await axios.delete(\"/api/users/\".concat(notificationId), config);\n};\nexport const markNotificationsSeen = () => async (dispatch, getState) => {\n  const {\n    userLogin: {\n      userInfo,\n      notifications\n    }\n  } = getState();\n  const config = {\n    headers: {\n      Authorization: \"Bearer \".concat(userInfo.token)\n    }\n  };\n  notifications.newNotificationsCount = 0;\n  dispatch({\n    type: USER_NOTIFICATIONS_UPDATE,\n    payload: notifications\n  });\n  await axios.put(\"/api/users/markNotifications\", {}, config);\n};\nexport const updateProfilePicture = formData => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: USER_PICTURE_UPDATE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'multipart/form-data',\n        Authorization: \"Bearer \".concat(userInfo.token)\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/images/upload\", formData, config);\n    if (data.image) {\n      const newImg = new Image();\n      newImg.src = data.image;\n      newImg.onload = () => {\n        dispatch({\n          type: USER_PICTURE_UPDATE_SUCCESS,\n          payload: data.image\n        });\n      };\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_PICTURE_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateColorTheme = (color, projectId) => (dispatch, getState) => {\n  const {\n    userLogin: {\n      userInfo\n    }\n  } = getState();\n  if (userInfo.projectsThemes[projectId]) {\n    userInfo.projectsThemes[projectId].mainColor = color;\n  } else userInfo.projectsThemes = {\n    ...userInfo.projectsThemes,\n    [projectId]: {\n      mainColor: color\n    }\n  };\n  dispatch({\n    type: USER_DATA_UPDATE,\n    payload: userInfo\n  });\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: \"Bearer \".concat(userInfo.token)\n    }\n  };\n  axios.put('/api/users/projectColorTheme', {\n    projectId,\n    color\n  }, config);\n};\nexport const uploadProjectBgImage = (formData, projectId) => async (dispatch, getState) => {\n  try {\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    dispatch({\n      type: USER_PROJECT_BG_UPDATE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-type': 'multipart/form-data',\n        Authorization: \"Bearer \".concat(userInfo.token)\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/images/upload/projectBgUpload/\".concat(projectId), formData, config);\n    if (data.image) {\n      const newImg = new Image();\n      newImg.src = data.image;\n      newImg.onload = () => {\n        document.getElementById('project-background').style.backgroundImage = \"url(\".concat(data.image, \")\");\n        dispatch({\n          type: USER_PROJECT_BG_UPDATE_SUCCESS\n        });\n        userInfo.projectsThemes[projectId].background = data.image;\n        dispatch({\n          type: USER_DATA_UPDATE,\n          payload: userInfo\n        });\n      };\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_PROJECT_BG_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateProjectBgColor = (background, projectId) => (dispatch, getState) => {\n  const {\n    userLogin: {\n      userInfo\n    }\n  } = getState();\n  document.getElementById('project-background').style.backgroundImage = background;\n  if (userInfo.projectsThemes[projectId]) {\n    userInfo.projectsThemes[projectId].background = background;\n  } else userInfo.projectsThemes = {\n    ...userInfo.projectsThemes,\n    [projectId]: {\n      background: background\n    }\n  };\n  dispatch({\n    type: USER_DATA_UPDATE,\n    payload: userInfo\n  });\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: \"Bearer \".concat(userInfo.token)\n    }\n  };\n  axios.put('/api/users/projectBgColorTheme', {\n    projectId,\n    background\n  }, config);\n};","map":{"version":3,"names":["USER_EMAIL_CONFIRM_FAIL","USER_EMAIL_CONFIRM_REQUEST","USER_EMAIL_CONFIRM_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_EMAIL_RESEND_REQUEST","USER_EMAIL_RESEND_SUCCESS","USER_EMAIL_RESEND_FAIL","USER_NOTIFICATIONS_UPDATE","USER_PICTURE_UPDATE_REQUEST","USER_PICTURE_UPDATE_SUCCESS","USER_PICTURE_UPDATE_FAIL","USER_DATA_UPDATE","USER_PROJECT_BG_UPDATE_FAIL","USER_PROJECT_BG_UPDATE_SUCCESS","USER_PROJECT_BG_UPDATE_REQUEST","SOCKET_CONNECT_RESET","SOCKET_CONNECT_SUCCESS","axios","io","login","email","password","dispatch","type","config","headers","data","post","socket","connect","window","location","origin","transports","auth","authorization","concat","userInfo","token","on","payload","emit","room","_id","localStorage","setItem","JSON","stringify","error","response","message","register","username","logout","getState","socketConnection","removeItem","disconnect","confirmEmail","emailCode","resendEmail","getUserData","Authorization","get","getUpdatedNotifications","userLogin","notifications","discardNotification","notificationId","notificationIndex","callback","items","splice","delete","markNotificationsSeen","newNotificationsCount","put","updateProfilePicture","formData","image","newImg","Image","src","onload","updateColorTheme","color","projectId","projectsThemes","mainColor","uploadProjectBgImage","document","getElementById","style","backgroundImage","background","updateProjectBgColor"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/redux/actions/userActions.js"],"sourcesContent":["import {\n  USER_EMAIL_CONFIRM_FAIL,\n  USER_EMAIL_CONFIRM_REQUEST,\n  USER_EMAIL_CONFIRM_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_EMAIL_RESEND_REQUEST,\n  USER_EMAIL_RESEND_SUCCESS,\n  USER_EMAIL_RESEND_FAIL,\n  USER_NOTIFICATIONS_UPDATE,\n  USER_PICTURE_UPDATE_REQUEST,\n  USER_PICTURE_UPDATE_SUCCESS,\n  USER_PICTURE_UPDATE_FAIL,\n  USER_DATA_UPDATE,\n  USER_PROJECT_BG_UPDATE_FAIL,\n  USER_PROJECT_BG_UPDATE_SUCCESS,\n  USER_PROJECT_BG_UPDATE_REQUEST,\n} from '../constants/userConstants';\nimport {\n  SOCKET_CONNECT_RESET,\n  SOCKET_CONNECT_SUCCESS,\n} from '../constants/socketConstants';\nimport axios from 'axios';\nimport io from 'socket.io-client';\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n    };\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    );\n\n    // connect to socket server\n    const socket = io.connect(window && window.location.origin, {\n      transports: ['websocket', 'polling', 'flashsocket'],\n      auth: {\n        authorization: `Bearer ${data.userInfo.token}`,\n      },\n    });\n    socket.on('connect', () => {\n      dispatch({ type: SOCKET_CONNECT_SUCCESS, payload: socket });\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n      socket.emit('join-notifications', { room: data.userInfo._id });\n    });\n\n    localStorage.setItem(\n      'userInfo',\n      JSON.stringify({ token: data.userInfo.token })\n    );\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const register = (username, email, password) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_REGISTER_REQUEST });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n    };\n    const { data } = await axios.post(\n      '/api/users/register',\n      { username, email, password },\n      config\n    );\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const logout = () => async (dispatch, getState) => {\n  const {\n    socketConnection: { socket },\n  } = getState();\n  // window.location = '/login'\n  localStorage.removeItem('userInfo');\n  dispatch({ type: USER_LOGOUT });\n  socket.disconnect();\n  dispatch({ type: SOCKET_CONNECT_RESET });\n};\n\nexport const confirmEmail = (emailCode) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_EMAIL_CONFIRM_REQUEST });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n    };\n    const { data } = await axios.post(\n      '/api/users/confirm',\n      { emailCode },\n      config\n    );\n    dispatch({ type: USER_EMAIL_CONFIRM_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_EMAIL_CONFIRM_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const resendEmail = (emailCode) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_EMAIL_RESEND_REQUEST });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n    };\n    const { data } = await axios.post(\n      '/api/users/resend',\n      { emailCode },\n      config\n    );\n    dispatch({ type: USER_EMAIL_RESEND_SUCCESS, payload: data });\n  } catch (error) {\n    dispatch({\n      type: USER_EMAIL_RESEND_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const getUserData = (token) => async (dispatch) => {\n  try {\n    dispatch({ type: USER_LOGIN_REQUEST });\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    };\n    const { data } = await axios.get('/api/users', config);\n\n    // connect to socket server\n    const socket = io.connect(window && window.location.origin, {\n      transports: ['websocket', 'polling', 'flashsocket'],\n      auth: {\n        authorization: `Bearer ${data.userInfo.token}`,\n      },\n    });\n    socket.on('connect', () => {\n      dispatch({ type: SOCKET_CONNECT_SUCCESS, payload: socket });\n      dispatch({ type: USER_LOGIN_SUCCESS, payload: data });\n      socket.emit('join-notifications', { room: data.userInfo._id });\n    });\n  } catch (error) {\n    localStorage.removeItem('userInfo');\n    dispatch({ type: USER_LOGOUT });\n  }\n};\n\nexport const getUpdatedNotifications = () => async (dispatch, getState) => {\n  const {\n    userLogin: { userInfo },\n  } = getState();\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n  const { data } = await axios.get('/api/users/notifications', config);\n  dispatch({ type: USER_NOTIFICATIONS_UPDATE, payload: data.notifications });\n};\n\nexport const discardNotification = (\n  notificationId,\n  notificationIndex,\n  callback\n) => async (dispatch, getState) => {\n  const {\n    userLogin: { userInfo, notifications },\n  } = getState();\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n  notifications.items.splice(notificationIndex, 1);\n  dispatch({ type: USER_NOTIFICATIONS_UPDATE, payload: notifications });\n  callback();\n  await axios.delete(`/api/users/${notificationId}`, config);\n};\n\nexport const markNotificationsSeen = () => async (dispatch, getState) => {\n  const {\n    userLogin: { userInfo, notifications },\n  } = getState();\n\n  const config = {\n    headers: {\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n  notifications.newNotificationsCount = 0;\n  dispatch({ type: USER_NOTIFICATIONS_UPDATE, payload: notifications });\n  await axios.put(`/api/users/markNotifications`, {}, config);\n};\n\nexport const updateProfilePicture = (formData) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    dispatch({ type: USER_PICTURE_UPDATE_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n    const { data } = await axios.post(`/api/images/upload`, formData, config);\n    if (data.image) {\n      const newImg = new Image();\n      newImg.src = data.image;\n      newImg.onload = () => {\n        dispatch({ type: USER_PICTURE_UPDATE_SUCCESS, payload: data.image });\n      };\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_PICTURE_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateColorTheme = (color, projectId) => (dispatch, getState) => {\n  const {\n    userLogin: { userInfo },\n  } = getState();\n\n  if (userInfo.projectsThemes[projectId]) {\n    userInfo.projectsThemes[projectId].mainColor = color;\n  } else\n    userInfo.projectsThemes = {\n      ...userInfo.projectsThemes,\n      [projectId]: { mainColor: color },\n    };\n  dispatch({ type: USER_DATA_UPDATE, payload: userInfo });\n\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n  axios.put('/api/users/projectColorTheme', { projectId, color }, config);\n};\n\nexport const uploadProjectBgImage = (formData, projectId) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    const {\n      userLogin: { userInfo },\n    } = getState();\n    dispatch({ type: USER_PROJECT_BG_UPDATE_REQUEST });\n\n    const config = {\n      headers: {\n        'Content-type': 'multipart/form-data',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `/api/images/upload/projectBgUpload/${projectId}`,\n      formData,\n      config\n    );\n\n    if (data.image) {\n      const newImg = new Image();\n      newImg.src = data.image;\n      newImg.onload = () => {\n        document.getElementById(\n          'project-background'\n        ).style.backgroundImage = `url(${data.image})`;\n        dispatch({ type: USER_PROJECT_BG_UPDATE_SUCCESS });\n        userInfo.projectsThemes[projectId].background = data.image;\n        dispatch({ type: USER_DATA_UPDATE, payload: userInfo });\n      };\n    }\n  } catch (error) {\n    dispatch({\n      type: USER_PROJECT_BG_UPDATE_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProjectBgColor = (background, projectId) => (\n  dispatch,\n  getState\n) => {\n  const {\n    userLogin: { userInfo },\n  } = getState();\n  document.getElementById(\n    'project-background'\n  ).style.backgroundImage = background;\n  if (userInfo.projectsThemes[projectId]) {\n    userInfo.projectsThemes[projectId].background = background;\n  } else\n    userInfo.projectsThemes = {\n      ...userInfo.projectsThemes,\n      [projectId]: { background: background },\n    };\n  dispatch({ type: USER_DATA_UPDATE, payload: userInfo });\n\n  const config = {\n    headers: {\n      'Content-type': 'application/json',\n      Authorization: `Bearer ${userInfo.token}`,\n    },\n  };\n  axios.put(\n    '/api/users/projectBgColorTheme',\n    { projectId, background },\n    config\n  );\n};\n"],"mappings":"AAAA,SACEA,uBAAuB,EACvBC,0BAA0B,EAC1BC,0BAA0B,EAC1BC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC,WAAW,EACXC,kBAAkB,EAClBC,qBAAqB,EACrBC,qBAAqB,EACrBC,yBAAyB,EACzBC,yBAAyB,EACzBC,sBAAsB,EACtBC,yBAAyB,EACzBC,2BAA2B,EAC3BC,2BAA2B,EAC3BC,wBAAwB,EACxBC,gBAAgB,EAChBC,2BAA2B,EAC3BC,8BAA8B,EAC9BC,8BAA8B,QACzB,4BAA4B;AACnC,SACEC,oBAAoB,EACpBC,sBAAsB,QACjB,8BAA8B;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AAEjC,OAAO,MAAMC,KAAK,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC5D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEzB;IAAmB,CAAC,CAAC;IAEtC,MAAM0B,MAAM,GAAG;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,kBAAkB,EAClB;MAAEP,KAAK;MAAEC;IAAS,CAAC,EACnBG,MACF,CAAC;;IAED;IACA,MAAMI,MAAM,GAAGV,EAAE,CAACW,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1DC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,aAAa,CAAC;MACnDC,IAAI,EAAE;QACJC,aAAa,YAAAC,MAAA,CAAYV,IAAI,CAACW,QAAQ,CAACC,KAAK;MAC9C;IACF,CAAC,CAAC;IACFV,MAAM,CAACW,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBjB,QAAQ,CAAC;QAAEC,IAAI,EAAEP,sBAAsB;QAAEwB,OAAO,EAAEZ;MAAO,CAAC,CAAC;MAC3DN,QAAQ,CAAC;QAAEC,IAAI,EAAExB,kBAAkB;QAAEyC,OAAO,EAAEd;MAAK,CAAC,CAAC;MACrDE,MAAM,CAACa,IAAI,CAAC,oBAAoB,EAAE;QAAEC,IAAI,EAAEhB,IAAI,CAACW,QAAQ,CAACM;MAAI,CAAC,CAAC;IAChE,CAAC,CAAC;IAEFC,YAAY,CAACC,OAAO,CAClB,UAAU,EACVC,IAAI,CAACC,SAAS,CAAC;MAAET,KAAK,EAAEZ,IAAI,CAACW,QAAQ,CAACC;IAAM,CAAC,CAC/C,CAAC;EACH,CAAC,CAAC,OAAOU,KAAK,EAAE;IACd1B,QAAQ,CAAC;MACPC,IAAI,EAAE1B,eAAe;MACrB2C,OAAO,EACLQ,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEhC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACzE,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAErB;IAAsB,CAAC,CAAC;IAEzC,MAAMsB,MAAM,GAAG;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,qBAAqB,EACrB;MAAEyB,QAAQ;MAAEhC,KAAK;MAAEC;IAAS,CAAC,EAC7BG,MACF,CAAC;IACDF,QAAQ,CAAC;MAAEC,IAAI,EAAEpB,qBAAqB;MAAEqC,OAAO,EAAEd;IAAK,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOsB,KAAK,EAAE;IACd1B,QAAQ,CAAC;MACPC,IAAI,EAAEtB,kBAAkB;MACxBuC,OAAO,EACLQ,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMG,MAAM,GAAGA,CAAA,KAAM,OAAO/B,QAAQ,EAAEgC,QAAQ,KAAK;EACxD,MAAM;IACJC,gBAAgB,EAAE;MAAE3B;IAAO;EAC7B,CAAC,GAAG0B,QAAQ,CAAC,CAAC;EACd;EACAV,YAAY,CAACY,UAAU,CAAC,UAAU,CAAC;EACnClC,QAAQ,CAAC;IAAEC,IAAI,EAAEvB;EAAY,CAAC,CAAC;EAC/B4B,MAAM,CAAC6B,UAAU,CAAC,CAAC;EACnBnC,QAAQ,CAAC;IAAEC,IAAI,EAAER;EAAqB,CAAC,CAAC;AAC1C,CAAC;AAED,OAAO,MAAM2C,YAAY,GAAIC,SAAS,IAAK,MAAOrC,QAAQ,IAAK;EAC7D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAE5B;IAA2B,CAAC,CAAC;IAE9C,MAAM6B,MAAM,GAAG;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,oBAAoB,EACpB;MAAEgC;IAAU,CAAC,EACbnC,MACF,CAAC;IACDF,QAAQ,CAAC;MAAEC,IAAI,EAAE3B,0BAA0B;MAAE4C,OAAO,EAAEd;IAAK,CAAC,CAAC;EAC/D,CAAC,CAAC,OAAOsB,KAAK,EAAE;IACd1B,QAAQ,CAAC;MACPC,IAAI,EAAE7B,uBAAuB;MAC7B8C,OAAO,EACLQ,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMU,WAAW,GAAID,SAAS,IAAK,MAAOrC,QAAQ,IAAK;EAC5D,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEnB;IAA0B,CAAC,CAAC;IAE7C,MAAMoB,MAAM,GAAG;MACbC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAChD,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,mBAAmB,EACnB;MAAEgC;IAAU,CAAC,EACbnC,MACF,CAAC;IACDF,QAAQ,CAAC;MAAEC,IAAI,EAAElB,yBAAyB;MAAEmC,OAAO,EAAEd;IAAK,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOsB,KAAK,EAAE;IACd1B,QAAQ,CAAC;MACPC,IAAI,EAAEjB,sBAAsB;MAC5BkC,OAAO,EACLQ,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMW,WAAW,GAAIvB,KAAK,IAAK,MAAOhB,QAAQ,IAAK;EACxD,IAAI;IACFA,QAAQ,CAAC;MAAEC,IAAI,EAAEzB;IAAmB,CAAC,CAAC;IAEtC,MAAM0B,MAAM,GAAG;MACbC,OAAO,EAAE;QACPqC,aAAa,YAAA1B,MAAA,CAAYE,KAAK;MAChC;IACF,CAAC;IACD,MAAM;MAAEZ;IAAK,CAAC,GAAG,MAAMT,KAAK,CAAC8C,GAAG,CAAC,YAAY,EAAEvC,MAAM,CAAC;;IAEtD;IACA,MAAMI,MAAM,GAAGV,EAAE,CAACW,OAAO,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,CAACC,MAAM,EAAE;MAC1DC,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,aAAa,CAAC;MACnDC,IAAI,EAAE;QACJC,aAAa,YAAAC,MAAA,CAAYV,IAAI,CAACW,QAAQ,CAACC,KAAK;MAC9C;IACF,CAAC,CAAC;IACFV,MAAM,CAACW,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBjB,QAAQ,CAAC;QAAEC,IAAI,EAAEP,sBAAsB;QAAEwB,OAAO,EAAEZ;MAAO,CAAC,CAAC;MAC3DN,QAAQ,CAAC;QAAEC,IAAI,EAAExB,kBAAkB;QAAEyC,OAAO,EAAEd;MAAK,CAAC,CAAC;MACrDE,MAAM,CAACa,IAAI,CAAC,oBAAoB,EAAE;QAAEC,IAAI,EAAEhB,IAAI,CAACW,QAAQ,CAACM;MAAI,CAAC,CAAC;IAChE,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACdJ,YAAY,CAACY,UAAU,CAAC,UAAU,CAAC;IACnClC,QAAQ,CAAC;MAAEC,IAAI,EAAEvB;IAAY,CAAC,CAAC;EACjC;AACF,CAAC;AAED,OAAO,MAAMgE,uBAAuB,GAAGA,CAAA,KAAM,OAAO1C,QAAQ,EAAEgC,QAAQ,KAAK;EACzE,MAAM;IACJW,SAAS,EAAE;MAAE5B;IAAS;EACxB,CAAC,GAAGiB,QAAQ,CAAC,CAAC;EAEd,MAAM9B,MAAM,GAAG;IACbC,OAAO,EAAE;MACPqC,aAAa,YAAA1B,MAAA,CAAYC,QAAQ,CAACC,KAAK;IACzC;EACF,CAAC;EACD,MAAM;IAAEZ;EAAK,CAAC,GAAG,MAAMT,KAAK,CAAC8C,GAAG,CAAC,0BAA0B,EAAEvC,MAAM,CAAC;EACpEF,QAAQ,CAAC;IAAEC,IAAI,EAAEhB,yBAAyB;IAAEiC,OAAO,EAAEd,IAAI,CAACwC;EAAc,CAAC,CAAC;AAC5E,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAGA,CACjCC,cAAc,EACdC,iBAAiB,EACjBC,QAAQ,KACL,OAAOhD,QAAQ,EAAEgC,QAAQ,KAAK;EACjC,MAAM;IACJW,SAAS,EAAE;MAAE5B,QAAQ;MAAE6B;IAAc;EACvC,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAEd,MAAM9B,MAAM,GAAG;IACbC,OAAO,EAAE;MACPqC,aAAa,YAAA1B,MAAA,CAAYC,QAAQ,CAACC,KAAK;IACzC;EACF,CAAC;EACD4B,aAAa,CAACK,KAAK,CAACC,MAAM,CAACH,iBAAiB,EAAE,CAAC,CAAC;EAChD/C,QAAQ,CAAC;IAAEC,IAAI,EAAEhB,yBAAyB;IAAEiC,OAAO,EAAE0B;EAAc,CAAC,CAAC;EACrEI,QAAQ,CAAC,CAAC;EACV,MAAMrD,KAAK,CAACwD,MAAM,eAAArC,MAAA,CAAegC,cAAc,GAAI5C,MAAM,CAAC;AAC5D,CAAC;AAED,OAAO,MAAMkD,qBAAqB,GAAGA,CAAA,KAAM,OAAOpD,QAAQ,EAAEgC,QAAQ,KAAK;EACvE,MAAM;IACJW,SAAS,EAAE;MAAE5B,QAAQ;MAAE6B;IAAc;EACvC,CAAC,GAAGZ,QAAQ,CAAC,CAAC;EAEd,MAAM9B,MAAM,GAAG;IACbC,OAAO,EAAE;MACPqC,aAAa,YAAA1B,MAAA,CAAYC,QAAQ,CAACC,KAAK;IACzC;EACF,CAAC;EACD4B,aAAa,CAACS,qBAAqB,GAAG,CAAC;EACvCrD,QAAQ,CAAC;IAAEC,IAAI,EAAEhB,yBAAyB;IAAEiC,OAAO,EAAE0B;EAAc,CAAC,CAAC;EACrE,MAAMjD,KAAK,CAAC2D,GAAG,iCAAiC,CAAC,CAAC,EAAEpD,MAAM,CAAC;AAC7D,CAAC;AAED,OAAO,MAAMqD,oBAAoB,GAAIC,QAAQ,IAAK,OAChDxD,QAAQ,EACRgC,QAAQ,KACL;EACH,IAAI;IACF,MAAM;MACJW,SAAS,EAAE;QAAE5B;MAAS;IACxB,CAAC,GAAGiB,QAAQ,CAAC,CAAC;IACdhC,QAAQ,CAAC;MAAEC,IAAI,EAAEf;IAA4B,CAAC,CAAC;IAE/C,MAAMgB,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,qBAAqB;QACrCqC,aAAa,YAAA1B,MAAA,CAAYC,QAAQ,CAACC,KAAK;MACzC;IACF,CAAC;IACD,MAAM;MAAEZ;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,uBAAuBmD,QAAQ,EAAEtD,MAAM,CAAC;IACzE,IAAIE,IAAI,CAACqD,KAAK,EAAE;MACd,MAAMC,MAAM,GAAG,IAAIC,KAAK,CAAC,CAAC;MAC1BD,MAAM,CAACE,GAAG,GAAGxD,IAAI,CAACqD,KAAK;MACvBC,MAAM,CAACG,MAAM,GAAG,MAAM;QACpB7D,QAAQ,CAAC;UAAEC,IAAI,EAAEd,2BAA2B;UAAE+B,OAAO,EAAEd,IAAI,CAACqD;QAAM,CAAC,CAAC;MACtE,CAAC;IACH;EACF,CAAC,CAAC,OAAO/B,KAAK,EAAE;IACd1B,QAAQ,CAAC;MACPC,IAAI,EAAEb,wBAAwB;MAC9B8B,OAAO,EACLQ,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMkC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,SAAS,KAAK,CAAChE,QAAQ,EAAEgC,QAAQ,KAAK;EAC5E,MAAM;IACJW,SAAS,EAAE;MAAE5B;IAAS;EACxB,CAAC,GAAGiB,QAAQ,CAAC,CAAC;EAEd,IAAIjB,QAAQ,CAACkD,cAAc,CAACD,SAAS,CAAC,EAAE;IACtCjD,QAAQ,CAACkD,cAAc,CAACD,SAAS,CAAC,CAACE,SAAS,GAAGH,KAAK;EACtD,CAAC,MACChD,QAAQ,CAACkD,cAAc,GAAG;IACxB,GAAGlD,QAAQ,CAACkD,cAAc;IAC1B,CAACD,SAAS,GAAG;MAAEE,SAAS,EAAEH;IAAM;EAClC,CAAC;EACH/D,QAAQ,CAAC;IAAEC,IAAI,EAAEZ,gBAAgB;IAAE6B,OAAO,EAAEH;EAAS,CAAC,CAAC;EAEvD,MAAMb,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCqC,aAAa,YAAA1B,MAAA,CAAYC,QAAQ,CAACC,KAAK;IACzC;EACF,CAAC;EACDrB,KAAK,CAAC2D,GAAG,CAAC,8BAA8B,EAAE;IAAEU,SAAS;IAAED;EAAM,CAAC,EAAE7D,MAAM,CAAC;AACzE,CAAC;AAED,OAAO,MAAMiE,oBAAoB,GAAGA,CAACX,QAAQ,EAAEQ,SAAS,KAAK,OAC3DhE,QAAQ,EACRgC,QAAQ,KACL;EACH,IAAI;IACF,MAAM;MACJW,SAAS,EAAE;QAAE5B;MAAS;IACxB,CAAC,GAAGiB,QAAQ,CAAC,CAAC;IACdhC,QAAQ,CAAC;MAAEC,IAAI,EAAET;IAA+B,CAAC,CAAC;IAElD,MAAMU,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,qBAAqB;QACrCqC,aAAa,YAAA1B,MAAA,CAAYC,QAAQ,CAACC,KAAK;MACzC;IACF,CAAC;IAED,MAAM;MAAEZ;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,uCAAAS,MAAA,CACOkD,SAAS,GAC/CR,QAAQ,EACRtD,MACF,CAAC;IAED,IAAIE,IAAI,CAACqD,KAAK,EAAE;MACd,MAAMC,MAAM,GAAG,IAAIC,KAAK,CAAC,CAAC;MAC1BD,MAAM,CAACE,GAAG,GAAGxD,IAAI,CAACqD,KAAK;MACvBC,MAAM,CAACG,MAAM,GAAG,MAAM;QACpBO,QAAQ,CAACC,cAAc,CACrB,oBACF,CAAC,CAACC,KAAK,CAACC,eAAe,UAAAzD,MAAA,CAAUV,IAAI,CAACqD,KAAK,MAAG;QAC9CzD,QAAQ,CAAC;UAAEC,IAAI,EAAEV;QAA+B,CAAC,CAAC;QAClDwB,QAAQ,CAACkD,cAAc,CAACD,SAAS,CAAC,CAACQ,UAAU,GAAGpE,IAAI,CAACqD,KAAK;QAC1DzD,QAAQ,CAAC;UAAEC,IAAI,EAAEZ,gBAAgB;UAAE6B,OAAO,EAAEH;QAAS,CAAC,CAAC;MACzD,CAAC;IACH;EACF,CAAC,CAAC,OAAOW,KAAK,EAAE;IACd1B,QAAQ,CAAC;MACPC,IAAI,EAAEX,2BAA2B;MACjC4B,OAAO,EACLQ,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACvB,IAAI,CAACwB,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAM6C,oBAAoB,GAAGA,CAACD,UAAU,EAAER,SAAS,KAAK,CAC7DhE,QAAQ,EACRgC,QAAQ,KACL;EACH,MAAM;IACJW,SAAS,EAAE;MAAE5B;IAAS;EACxB,CAAC,GAAGiB,QAAQ,CAAC,CAAC;EACdoC,QAAQ,CAACC,cAAc,CACrB,oBACF,CAAC,CAACC,KAAK,CAACC,eAAe,GAAGC,UAAU;EACpC,IAAIzD,QAAQ,CAACkD,cAAc,CAACD,SAAS,CAAC,EAAE;IACtCjD,QAAQ,CAACkD,cAAc,CAACD,SAAS,CAAC,CAACQ,UAAU,GAAGA,UAAU;EAC5D,CAAC,MACCzD,QAAQ,CAACkD,cAAc,GAAG;IACxB,GAAGlD,QAAQ,CAACkD,cAAc;IAC1B,CAACD,SAAS,GAAG;MAAEQ,UAAU,EAAEA;IAAW;EACxC,CAAC;EACHxE,QAAQ,CAAC;IAAEC,IAAI,EAAEZ,gBAAgB;IAAE6B,OAAO,EAAEH;EAAS,CAAC,CAAC;EAEvD,MAAMb,MAAM,GAAG;IACbC,OAAO,EAAE;MACP,cAAc,EAAE,kBAAkB;MAClCqC,aAAa,YAAA1B,MAAA,CAAYC,QAAQ,CAACC,KAAK;IACzC;EACF,CAAC;EACDrB,KAAK,CAAC2D,GAAG,CACP,gCAAgC,EAChC;IAAEU,SAAS;IAAEQ;EAAW,CAAC,EACzBtE,MACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module"}