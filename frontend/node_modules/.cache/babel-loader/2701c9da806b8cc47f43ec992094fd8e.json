{"ast":null,"code":"var _jsxFileName = \"/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/navbar/groupChat/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PROJECT_RESET_NEW_MESSAGE } from '../../../../redux/constants/projectConstants';\nimport { makeStyles, Tooltip, Badge } from '@material-ui/core';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport ChatContainer from './ChatContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  icon: {\n    display: 'flex',\n    padding: 5,\n    cursor: 'pointer',\n    color: '#fff',\n    transition: '.2s ease',\n    '&:hover': {\n      background: '#ffffff21',\n      borderRadius: 3\n    }\n  },\n  chatOpen: {\n    display: 'block'\n  },\n  chatClosed: {\n    display: 'none',\n    transition: '1s ease-out'\n  }\n}));\nconst Chat = _ref => {\n  _s();\n  let {\n    mobile,\n    hide\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    newMessage\n  } = useSelector(state => state.projectMessages);\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    if (open && newMessage) dispatch({\n      type: PROJECT_RESET_NEW_MESSAGE\n    });\n  }, [dispatch, open, newMessage]);\n  const openHandle = () => {\n    setOpen(prevState => !prevState);\n    dispatch({\n      type: PROJECT_RESET_NEW_MESSAGE\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Chat\",\n      style: {\n        display: hide && 'none'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: openHandle,\n        className: classes.icon,\n        children: /*#__PURE__*/_jsxDEV(Badge, {\n          color: \"secondary\",\n          variant: \"dot\",\n          invisible: !(newMessage && !open),\n          children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      closeChat: () => setOpen(false),\n      open: open,\n      mobile: mobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chat, \"ghBwAtsh36QZ6UDjZOJ4D0jB218=\", false, function () {\n  return [useDispatch, useSelector, useStyles];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","PROJECT_RESET_NEW_MESSAGE","makeStyles","Tooltip","Badge","ChatIcon","ChatContainer","jsxDEV","_jsxDEV","Fragment","_Fragment","useStyles","icon","display","padding","cursor","color","transition","background","borderRadius","chatOpen","chatClosed","Chat","_ref","_s","mobile","hide","dispatch","newMessage","state","projectMessages","open","setOpen","classes","type","openHandle","prevState","children","title","style","onClick","className","variant","invisible","fileName","_jsxFileName","lineNumber","columnNumber","closeChat","_c","$RefreshReg$"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/navbar/groupChat/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PROJECT_RESET_NEW_MESSAGE } from '../../../../redux/constants/projectConstants';\n\nimport { makeStyles, Tooltip, Badge } from '@material-ui/core';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport ChatContainer from './ChatContainer';\n\nconst useStyles = makeStyles(() => ({\n  icon: {\n    display: 'flex',\n    padding: 5,\n    cursor: 'pointer',\n    color: '#fff',\n    transition: '.2s ease',\n    '&:hover': {\n      background: '#ffffff21',\n      borderRadius: 3,\n    },\n  },\n  chatOpen: {\n    display: 'block',\n  },\n  chatClosed: {\n    display: 'none',\n    transition: '1s ease-out',\n  },\n}));\n\nconst Chat = ({ mobile, hide }) => {\n  const dispatch = useDispatch();\n  const { newMessage } = useSelector((state) => state.projectMessages);\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (open && newMessage) dispatch({ type: PROJECT_RESET_NEW_MESSAGE });\n  }, [dispatch, open, newMessage]);\n\n  const openHandle = () => {\n    setOpen((prevState) => !prevState);\n    dispatch({ type: PROJECT_RESET_NEW_MESSAGE });\n  };\n\n  return (\n    <>\n      <Tooltip title='Chat' style={{ display: hide && 'none' }}>\n        <div onClick={openHandle} className={classes.icon}>\n          <Badge\n            color='secondary'\n            variant='dot'\n            invisible={!(newMessage && !open)}\n          >\n            <ChatIcon />\n          </Badge>\n        </div>\n      </Tooltip>\n      <ChatContainer\n        closeChat={() => setOpen(false)}\n        open={open}\n        mobile={mobile}\n      />\n    </>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}