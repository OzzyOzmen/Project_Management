{"ast":null,"code":"import { PROJECT_CREATE_REQUEST, PROJECT_CREATE_SUCCESS, PROJECT_CREATE_FAIL, PROJECT_CREATE_RESET, PROJECT_SET_CURRENT, PROJECT_SET_CURRENT_RESET, PROJECT_DATA_REQUEST, PROJECT_DATA_SUCCESS, PROJECT_DATA_FAIL, PROJECT_DATA_RESET, PROJECT_DATA_ADD_TASK, PROJECT_TASK_MOVE, PROJECT_TASK_MOVE_RESET, PROJECT_DATA_UPDATE_LISTS, PROJECT_DATA_MOVE_TASK, PROJECT_DATA_ADD_LIST, PROJECT_DATA_LIST_TITLE_UPDATE, PROJECT_DATA_TITLE_UPDATE, PROJECT_FIND_USERS_REQUEST, PROJECT_FIND_USERS_SUCCESS, PROJECT_FIND_USERS_FAIL, PROJECT_DATA_JOIN_LINK_UPDATE, PROJECT_DATA_USERS_UPDATE, PROJECT_DATA_PERMISSIONS_UPDATE, PROJECT_DATA_TASK_ARCHIVED, PROJECT_SET_TASK_REQUEST, PROJECT_SET_TASK_SUCCESS, PROJECT_SET_TASK_FAIL, PROJECT_SET_TASK_RESET, PROJECT_DATA_UPDATE_LABELS, PROJECT_TODO_VISIBILITY_UPDATE, PROJECT_SET_MESSAGES, PROJECT_UPDATE_MESSAGES, PROJECT_SET_NEW_MESSAGE, PROJECT_RESET_NEW_MESSAGE } from '../constants/projectConstants';\nimport deepcopy from 'deepcopy';\nexport const projectCreateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PROJECT_CREATE_REQUEST:\n      return {\n        loading: true\n      };\n    case PROJECT_CREATE_SUCCESS:\n      return {\n        loading: false,\n        project: action.payload.project\n      };\n    case PROJECT_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    case PROJECT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport const projectSetCurrentReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PROJECT_SET_CURRENT:\n      return {\n        project: action.payload\n      };\n    case PROJECT_DATA_TITLE_UPDATE:\n      {\n        const stateClone = deepcopy(state);\n        stateClone.project.title = action.payload.title;\n        return stateClone;\n      }\n    case PROJECT_SET_CURRENT_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport const projectGetDataReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    loading: true\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PROJECT_DATA_REQUEST:\n      return {\n        loading: true\n      };\n    case PROJECT_DATA_SUCCESS:\n      return {\n        loading: false,\n        project: action.payload.project,\n        lists: action.payload.lists,\n        labels: action.payload.labels\n      };\n    case PROJECT_DATA_ADD_TASK:\n      {\n        const stateClone = deepcopy(state);\n        const listIndex = stateClone.lists.lists.findIndex(list => list._id === action.payload.listId);\n        stateClone.lists.lists[listIndex].tasks.push(action.payload.task);\n        return stateClone;\n      }\n    case PROJECT_DATA_UPDATE_LISTS:\n      {\n        return {\n          ...state,\n          lists: action.payload\n        };\n      }\n    case PROJECT_DATA_MOVE_TASK:\n      {\n        const {\n          payload: {\n            added,\n            removed,\n            task\n          }\n        } = action;\n        const stateCopy = deepcopy(state);\n        stateCopy.lists.lists[removed.listIndex].tasks.splice(removed.index, 1);\n        stateCopy.lists.lists[added.listIndex].tasks.splice(added.index, 0, task);\n        return stateCopy;\n      }\n    case PROJECT_DATA_ADD_LIST:\n      {\n        const stateClone = Object.assign({}, state);\n        stateClone.lists.lists.push(action.payload.list);\n        return stateClone;\n      }\n    case PROJECT_DATA_LIST_TITLE_UPDATE:\n      {\n        const {\n          payload: {\n            listIndex,\n            title\n          }\n        } = action;\n        const stateClone = deepcopy(state);\n        stateClone.lists.lists[listIndex].title = title;\n        return stateClone;\n      }\n    case PROJECT_DATA_TITLE_UPDATE:\n      {\n        const stateClone = deepcopy(state);\n        stateClone.project.title = action.payload.title;\n        return stateClone;\n      }\n    case PROJECT_DATA_JOIN_LINK_UPDATE:\n      {\n        const stateClone = deepcopy(state);\n        stateClone.project.joinId = action.payload.joinId;\n        stateClone.project.joinIdActive = action.payload.joinIdActive;\n        return stateClone;\n      }\n    case PROJECT_DATA_USERS_UPDATE:\n      {\n        const stateClone = deepcopy(state);\n        stateClone.project.users = action.payload;\n        return stateClone;\n      }\n    case PROJECT_DATA_PERMISSIONS_UPDATE:\n      {\n        return {\n          ...state,\n          project: {\n            ...state.project,\n            permissions: action.payload\n          }\n        };\n      }\n    case PROJECT_DATA_TASK_ARCHIVED:\n      {\n        const {\n          payload: {\n            listIndex,\n            taskId\n          }\n        } = action;\n        const stateClone = deepcopy(state);\n        const taskIndex = stateClone.lists.lists[listIndex].tasks.findIndex(x => x._id === taskId);\n        stateClone.lists.lists[listIndex].tasks.splice(taskIndex, 1);\n        return stateClone;\n      }\n    case PROJECT_DATA_UPDATE_LABELS:\n      {\n        return {\n          ...state,\n          labels: action.payload\n        };\n      }\n    case PROJECT_DATA_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    case PROJECT_DATA_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport const projectTaskMoveReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    removed: null,\n    added: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PROJECT_TASK_MOVE:\n      const {\n        payload: {\n          removed,\n          added\n        }\n      } = action;\n      if (removed && added) return {\n        removed,\n        added\n      };else if (removed) return {\n        ...state,\n        removed\n      };else if (added) return {\n        ...state,\n        added\n      };\n      return state;\n    case PROJECT_TASK_MOVE_RESET:\n      return {\n        removed: null,\n        added: null\n      };\n    default:\n      return state;\n  }\n};\nexport const projectFindUsersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    users: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PROJECT_FIND_USERS_REQUEST:\n      return {\n        loading: true\n      };\n    case PROJECT_FIND_USERS_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload\n      };\n    case PROJECT_FIND_USERS_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const projectSetTaskReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PROJECT_SET_TASK_REQUEST:\n      return {\n        loading: true\n      };\n    case PROJECT_SET_TASK_SUCCESS:\n      return {\n        loading: false,\n        task: action.payload\n      };\n    case PROJECT_SET_TASK_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n    case PROJECT_SET_TASK_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\nexport const projectToDoVisibilityReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    listIds: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PROJECT_TODO_VISIBILITY_UPDATE:\n      {\n        return {\n          listIds: action.payload\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const projectMessagesReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    messages: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case PROJECT_SET_MESSAGES:\n      return {\n        messages: action.payload\n      };\n    case PROJECT_UPDATE_MESSAGES:\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      };\n    case PROJECT_SET_NEW_MESSAGE:\n      return {\n        ...state,\n        newMessage: true\n      };\n    case PROJECT_RESET_NEW_MESSAGE:\n      return {\n        ...state,\n        newMessage: false\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["PROJECT_CREATE_REQUEST","PROJECT_CREATE_SUCCESS","PROJECT_CREATE_FAIL","PROJECT_CREATE_RESET","PROJECT_SET_CURRENT","PROJECT_SET_CURRENT_RESET","PROJECT_DATA_REQUEST","PROJECT_DATA_SUCCESS","PROJECT_DATA_FAIL","PROJECT_DATA_RESET","PROJECT_DATA_ADD_TASK","PROJECT_TASK_MOVE","PROJECT_TASK_MOVE_RESET","PROJECT_DATA_UPDATE_LISTS","PROJECT_DATA_MOVE_TASK","PROJECT_DATA_ADD_LIST","PROJECT_DATA_LIST_TITLE_UPDATE","PROJECT_DATA_TITLE_UPDATE","PROJECT_FIND_USERS_REQUEST","PROJECT_FIND_USERS_SUCCESS","PROJECT_FIND_USERS_FAIL","PROJECT_DATA_JOIN_LINK_UPDATE","PROJECT_DATA_USERS_UPDATE","PROJECT_DATA_PERMISSIONS_UPDATE","PROJECT_DATA_TASK_ARCHIVED","PROJECT_SET_TASK_REQUEST","PROJECT_SET_TASK_SUCCESS","PROJECT_SET_TASK_FAIL","PROJECT_SET_TASK_RESET","PROJECT_DATA_UPDATE_LABELS","PROJECT_TODO_VISIBILITY_UPDATE","PROJECT_SET_MESSAGES","PROJECT_UPDATE_MESSAGES","PROJECT_SET_NEW_MESSAGE","PROJECT_RESET_NEW_MESSAGE","deepcopy","projectCreateReducer","state","arguments","length","undefined","action","type","loading","project","payload","error","projectSetCurrentReducer","stateClone","title","projectGetDataReducer","lists","labels","listIndex","findIndex","list","_id","listId","tasks","push","task","added","removed","stateCopy","splice","index","Object","assign","joinId","joinIdActive","users","permissions","taskId","taskIndex","x","projectTaskMoveReducer","projectFindUsersReducer","projectSetTaskReducer","projectToDoVisibilityReducer","listIds","projectMessagesReducer","messages","newMessage"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/redux/reducers/projectReducers.js"],"sourcesContent":["import {\n  PROJECT_CREATE_REQUEST,\n  PROJECT_CREATE_SUCCESS,\n  PROJECT_CREATE_FAIL,\n  PROJECT_CREATE_RESET,\n  PROJECT_SET_CURRENT,\n  PROJECT_SET_CURRENT_RESET,\n  PROJECT_DATA_REQUEST,\n  PROJECT_DATA_SUCCESS,\n  PROJECT_DATA_FAIL,\n  PROJECT_DATA_RESET,\n  PROJECT_DATA_ADD_TASK,\n  PROJECT_TASK_MOVE,\n  PROJECT_TASK_MOVE_RESET,\n  PROJECT_DATA_UPDATE_LISTS,\n  PROJECT_DATA_MOVE_TASK,\n  PROJECT_DATA_ADD_LIST,\n  PROJECT_DATA_LIST_TITLE_UPDATE,\n  PROJECT_DATA_TITLE_UPDATE,\n  PROJECT_FIND_USERS_REQUEST,\n  PROJECT_FIND_USERS_SUCCESS,\n  PROJECT_FIND_USERS_FAIL,\n  PROJECT_DATA_JOIN_LINK_UPDATE,\n  PROJECT_DATA_USERS_UPDATE,\n  PROJECT_DATA_PERMISSIONS_UPDATE,\n  PROJECT_DATA_TASK_ARCHIVED,\n  PROJECT_SET_TASK_REQUEST,\n  PROJECT_SET_TASK_SUCCESS,\n  PROJECT_SET_TASK_FAIL,\n  PROJECT_SET_TASK_RESET,\n  PROJECT_DATA_UPDATE_LABELS,\n  PROJECT_TODO_VISIBILITY_UPDATE,\n  PROJECT_SET_MESSAGES,\n  PROJECT_UPDATE_MESSAGES,\n  PROJECT_SET_NEW_MESSAGE,\n  PROJECT_RESET_NEW_MESSAGE,\n} from '../constants/projectConstants';\nimport deepcopy from 'deepcopy';\n\nexport const projectCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PROJECT_CREATE_REQUEST:\n      return { loading: true };\n    case PROJECT_CREATE_SUCCESS:\n      return {\n        loading: false,\n        project: action.payload.project,\n      };\n    case PROJECT_CREATE_FAIL:\n      return { loading: false, error: action.payload };\n    case PROJECT_CREATE_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const projectSetCurrentReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PROJECT_SET_CURRENT:\n      return { project: action.payload };\n    case PROJECT_DATA_TITLE_UPDATE: {\n      const stateClone = deepcopy(state);\n      stateClone.project.title = action.payload.title;\n      return stateClone;\n    }\n    case PROJECT_SET_CURRENT_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const projectGetDataReducer = (state = { loading: true }, action) => {\n  switch (action.type) {\n    case PROJECT_DATA_REQUEST:\n      return { loading: true };\n    case PROJECT_DATA_SUCCESS:\n      return {\n        loading: false,\n        project: action.payload.project,\n        lists: action.payload.lists,\n        labels: action.payload.labels,\n      };\n    case PROJECT_DATA_ADD_TASK: {\n      const stateClone = deepcopy(state);\n      const listIndex = stateClone.lists.lists.findIndex(\n        (list) => list._id === action.payload.listId\n      );\n      stateClone.lists.lists[listIndex].tasks.push(action.payload.task);\n      return stateClone;\n    }\n    case PROJECT_DATA_UPDATE_LISTS: {\n      return { ...state, lists: action.payload };\n    }\n    case PROJECT_DATA_MOVE_TASK: {\n      const {\n        payload: { added, removed, task },\n      } = action;\n      const stateCopy = deepcopy(state);\n      stateCopy.lists.lists[removed.listIndex].tasks.splice(removed.index, 1);\n      stateCopy.lists.lists[added.listIndex].tasks.splice(added.index, 0, task);\n      return stateCopy;\n    }\n    case PROJECT_DATA_ADD_LIST: {\n      const stateClone = Object.assign({}, state);\n      stateClone.lists.lists.push(action.payload.list);\n      return stateClone;\n    }\n    case PROJECT_DATA_LIST_TITLE_UPDATE: {\n      const {\n        payload: { listIndex, title },\n      } = action;\n      const stateClone = deepcopy(state);\n      stateClone.lists.lists[listIndex].title = title;\n      return stateClone;\n    }\n    case PROJECT_DATA_TITLE_UPDATE: {\n      const stateClone = deepcopy(state);\n      stateClone.project.title = action.payload.title;\n      return stateClone;\n    }\n    case PROJECT_DATA_JOIN_LINK_UPDATE: {\n      const stateClone = deepcopy(state);\n      stateClone.project.joinId = action.payload.joinId;\n      stateClone.project.joinIdActive = action.payload.joinIdActive;\n      return stateClone;\n    }\n    case PROJECT_DATA_USERS_UPDATE: {\n      const stateClone = deepcopy(state);\n      stateClone.project.users = action.payload;\n      return stateClone;\n    }\n    case PROJECT_DATA_PERMISSIONS_UPDATE: {\n      return {\n        ...state,\n        project: { ...state.project, permissions: action.payload },\n      };\n    }\n    case PROJECT_DATA_TASK_ARCHIVED: {\n      const {\n        payload: { listIndex, taskId },\n      } = action;\n      const stateClone = deepcopy(state);\n      const taskIndex = stateClone.lists.lists[listIndex].tasks.findIndex(\n        (x) => x._id === taskId\n      );\n      stateClone.lists.lists[listIndex].tasks.splice(taskIndex, 1);\n      return stateClone;\n    }\n    case PROJECT_DATA_UPDATE_LABELS: {\n      return { ...state, labels: action.payload };\n    }\n    case PROJECT_DATA_FAIL:\n      return { loading: false, error: action.payload };\n    case PROJECT_DATA_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const projectTaskMoveReducer = (\n  state = { removed: null, added: null },\n  action\n) => {\n  switch (action.type) {\n    case PROJECT_TASK_MOVE:\n      const {\n        payload: { removed, added },\n      } = action;\n      if (removed && added) return { removed, added };\n      else if (removed) return { ...state, removed };\n      else if (added) return { ...state, added };\n      return state;\n    case PROJECT_TASK_MOVE_RESET:\n      return { removed: null, added: null };\n    default:\n      return state;\n  }\n};\n\nexport const projectFindUsersReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case PROJECT_FIND_USERS_REQUEST:\n      return { loading: true };\n    case PROJECT_FIND_USERS_SUCCESS:\n      return {\n        loading: false,\n        users: action.payload,\n      };\n    case PROJECT_FIND_USERS_FAIL:\n      return { loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const projectSetTaskReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PROJECT_SET_TASK_REQUEST:\n      return { loading: true };\n    case PROJECT_SET_TASK_SUCCESS:\n      return {\n        loading: false,\n        task: action.payload,\n      };\n    case PROJECT_SET_TASK_FAIL:\n      return { loading: false, error: action.payload };\n    case PROJECT_SET_TASK_RESET:\n      return {};\n    default:\n      return state;\n  }\n};\n\nexport const projectToDoVisibilityReducer = (\n  state = { listIds: [] },\n  action\n) => {\n  switch (action.type) {\n    case PROJECT_TODO_VISIBILITY_UPDATE: {\n      return { listIds: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const projectMessagesReducer = (state = { messages: [] }, action) => {\n  switch (action.type) {\n    case PROJECT_SET_MESSAGES:\n      return { messages: action.payload };\n    case PROJECT_UPDATE_MESSAGES:\n      return { ...state, messages: [...state.messages, action.payload] };\n    case PROJECT_SET_NEW_MESSAGE:\n      return { ...state, newMessage: true };\n    case PROJECT_RESET_NEW_MESSAGE:\n      return { ...state, newMessage: false };\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SACEA,sBAAsB,EACtBC,sBAAsB,EACtBC,mBAAmB,EACnBC,oBAAoB,EACpBC,mBAAmB,EACnBC,yBAAyB,EACzBC,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,kBAAkB,EAClBC,qBAAqB,EACrBC,iBAAiB,EACjBC,uBAAuB,EACvBC,yBAAyB,EACzBC,sBAAsB,EACtBC,qBAAqB,EACrBC,8BAA8B,EAC9BC,yBAAyB,EACzBC,0BAA0B,EAC1BC,0BAA0B,EAC1BC,uBAAuB,EACvBC,6BAA6B,EAC7BC,yBAAyB,EACzBC,+BAA+B,EAC/BC,0BAA0B,EAC1BC,wBAAwB,EACxBC,wBAAwB,EACxBC,qBAAqB,EACrBC,sBAAsB,EACtBC,0BAA0B,EAC1BC,8BAA8B,EAC9BC,oBAAoB,EACpBC,uBAAuB,EACvBC,uBAAuB,EACvBC,yBAAyB,QACpB,+BAA+B;AACtC,OAAOC,QAAQ,MAAM,UAAU;AAE/B,OAAO,MAAMC,oBAAoB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK1C,sBAAsB;MACzB,OAAO;QAAE2C,OAAO,EAAE;MAAK,CAAC;IAC1B,KAAK1C,sBAAsB;MACzB,OAAO;QACL0C,OAAO,EAAE,KAAK;QACdC,OAAO,EAAEH,MAAM,CAACI,OAAO,CAACD;MAC1B,CAAC;IACH,KAAK1C,mBAAmB;MACtB,OAAO;QAAEyC,OAAO,EAAE,KAAK;QAAEG,KAAK,EAAEL,MAAM,CAACI;MAAQ,CAAC;IAClD,KAAK1C,oBAAoB;MACvB,OAAO,CAAC,CAAC;IACX;MACE,OAAOkC,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMU,wBAAwB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBV,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACzD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKtC,mBAAmB;MACtB,OAAO;QAAEwC,OAAO,EAAEH,MAAM,CAACI;MAAQ,CAAC;IACpC,KAAK5B,yBAAyB;MAAE;QAC9B,MAAM+B,UAAU,GAAGb,QAAQ,CAACE,KAAK,CAAC;QAClCW,UAAU,CAACJ,OAAO,CAACK,KAAK,GAAGR,MAAM,CAACI,OAAO,CAACI,KAAK;QAC/C,OAAOD,UAAU;MACnB;IACA,KAAK3C,yBAAyB;MAC5B,OAAO,CAAC,CAAC;IACX;MACE,OAAOgC,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMa,qBAAqB,GAAG,SAAAA,CAAA,EAAuC;EAAA,IAAtCb,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEK,OAAO,EAAE;EAAK,CAAC;EAAA,IAAEF,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrE,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKpC,oBAAoB;MACvB,OAAO;QAAEqC,OAAO,EAAE;MAAK,CAAC;IAC1B,KAAKpC,oBAAoB;MACvB,OAAO;QACLoC,OAAO,EAAE,KAAK;QACdC,OAAO,EAAEH,MAAM,CAACI,OAAO,CAACD,OAAO;QAC/BO,KAAK,EAAEV,MAAM,CAACI,OAAO,CAACM,KAAK;QAC3BC,MAAM,EAAEX,MAAM,CAACI,OAAO,CAACO;MACzB,CAAC;IACH,KAAK1C,qBAAqB;MAAE;QAC1B,MAAMsC,UAAU,GAAGb,QAAQ,CAACE,KAAK,CAAC;QAClC,MAAMgB,SAAS,GAAGL,UAAU,CAACG,KAAK,CAACA,KAAK,CAACG,SAAS,CAC/CC,IAAI,IAAKA,IAAI,CAACC,GAAG,KAAKf,MAAM,CAACI,OAAO,CAACY,MACxC,CAAC;QACDT,UAAU,CAACG,KAAK,CAACA,KAAK,CAACE,SAAS,CAAC,CAACK,KAAK,CAACC,IAAI,CAAClB,MAAM,CAACI,OAAO,CAACe,IAAI,CAAC;QACjE,OAAOZ,UAAU;MACnB;IACA,KAAKnC,yBAAyB;MAAE;QAC9B,OAAO;UAAE,GAAGwB,KAAK;UAAEc,KAAK,EAAEV,MAAM,CAACI;QAAQ,CAAC;MAC5C;IACA,KAAK/B,sBAAsB;MAAE;QAC3B,MAAM;UACJ+B,OAAO,EAAE;YAAEgB,KAAK;YAAEC,OAAO;YAAEF;UAAK;QAClC,CAAC,GAAGnB,MAAM;QACV,MAAMsB,SAAS,GAAG5B,QAAQ,CAACE,KAAK,CAAC;QACjC0B,SAAS,CAACZ,KAAK,CAACA,KAAK,CAACW,OAAO,CAACT,SAAS,CAAC,CAACK,KAAK,CAACM,MAAM,CAACF,OAAO,CAACG,KAAK,EAAE,CAAC,CAAC;QACvEF,SAAS,CAACZ,KAAK,CAACA,KAAK,CAACU,KAAK,CAACR,SAAS,CAAC,CAACK,KAAK,CAACM,MAAM,CAACH,KAAK,CAACI,KAAK,EAAE,CAAC,EAAEL,IAAI,CAAC;QACzE,OAAOG,SAAS;MAClB;IACA,KAAKhD,qBAAqB;MAAE;QAC1B,MAAMiC,UAAU,GAAGkB,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE9B,KAAK,CAAC;QAC3CW,UAAU,CAACG,KAAK,CAACA,KAAK,CAACQ,IAAI,CAAClB,MAAM,CAACI,OAAO,CAACU,IAAI,CAAC;QAChD,OAAOP,UAAU;MACnB;IACA,KAAKhC,8BAA8B;MAAE;QACnC,MAAM;UACJ6B,OAAO,EAAE;YAAEQ,SAAS;YAAEJ;UAAM;QAC9B,CAAC,GAAGR,MAAM;QACV,MAAMO,UAAU,GAAGb,QAAQ,CAACE,KAAK,CAAC;QAClCW,UAAU,CAACG,KAAK,CAACA,KAAK,CAACE,SAAS,CAAC,CAACJ,KAAK,GAAGA,KAAK;QAC/C,OAAOD,UAAU;MACnB;IACA,KAAK/B,yBAAyB;MAAE;QAC9B,MAAM+B,UAAU,GAAGb,QAAQ,CAACE,KAAK,CAAC;QAClCW,UAAU,CAACJ,OAAO,CAACK,KAAK,GAAGR,MAAM,CAACI,OAAO,CAACI,KAAK;QAC/C,OAAOD,UAAU;MACnB;IACA,KAAK3B,6BAA6B;MAAE;QAClC,MAAM2B,UAAU,GAAGb,QAAQ,CAACE,KAAK,CAAC;QAClCW,UAAU,CAACJ,OAAO,CAACwB,MAAM,GAAG3B,MAAM,CAACI,OAAO,CAACuB,MAAM;QACjDpB,UAAU,CAACJ,OAAO,CAACyB,YAAY,GAAG5B,MAAM,CAACI,OAAO,CAACwB,YAAY;QAC7D,OAAOrB,UAAU;MACnB;IACA,KAAK1B,yBAAyB;MAAE;QAC9B,MAAM0B,UAAU,GAAGb,QAAQ,CAACE,KAAK,CAAC;QAClCW,UAAU,CAACJ,OAAO,CAAC0B,KAAK,GAAG7B,MAAM,CAACI,OAAO;QACzC,OAAOG,UAAU;MACnB;IACA,KAAKzB,+BAA+B;MAAE;QACpC,OAAO;UACL,GAAGc,KAAK;UACRO,OAAO,EAAE;YAAE,GAAGP,KAAK,CAACO,OAAO;YAAE2B,WAAW,EAAE9B,MAAM,CAACI;UAAQ;QAC3D,CAAC;MACH;IACA,KAAKrB,0BAA0B;MAAE;QAC/B,MAAM;UACJqB,OAAO,EAAE;YAAEQ,SAAS;YAAEmB;UAAO;QAC/B,CAAC,GAAG/B,MAAM;QACV,MAAMO,UAAU,GAAGb,QAAQ,CAACE,KAAK,CAAC;QAClC,MAAMoC,SAAS,GAAGzB,UAAU,CAACG,KAAK,CAACA,KAAK,CAACE,SAAS,CAAC,CAACK,KAAK,CAACJ,SAAS,CAChEoB,CAAC,IAAKA,CAAC,CAAClB,GAAG,KAAKgB,MACnB,CAAC;QACDxB,UAAU,CAACG,KAAK,CAACA,KAAK,CAACE,SAAS,CAAC,CAACK,KAAK,CAACM,MAAM,CAACS,SAAS,EAAE,CAAC,CAAC;QAC5D,OAAOzB,UAAU;MACnB;IACA,KAAKnB,0BAA0B;MAAE;QAC/B,OAAO;UAAE,GAAGQ,KAAK;UAAEe,MAAM,EAAEX,MAAM,CAACI;QAAQ,CAAC;MAC7C;IACA,KAAKrC,iBAAiB;MACpB,OAAO;QAAEmC,OAAO,EAAE,KAAK;QAAEG,KAAK,EAAEL,MAAM,CAACI;MAAQ,CAAC;IAClD,KAAKpC,kBAAkB;MACrB,OAAO,CAAC,CAAC;IACX;MACE,OAAO4B,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMsC,sBAAsB,GAAG,SAAAA,CAAA,EAGjC;EAAA,IAFHtC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEwB,OAAO,EAAE,IAAI;IAAED,KAAK,EAAE;EAAK,CAAC;EAAA,IACtCpB,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEN,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAK/B,iBAAiB;MACpB,MAAM;QACJkC,OAAO,EAAE;UAAEiB,OAAO;UAAED;QAAM;MAC5B,CAAC,GAAGpB,MAAM;MACV,IAAIqB,OAAO,IAAID,KAAK,EAAE,OAAO;QAAEC,OAAO;QAAED;MAAM,CAAC,CAAC,KAC3C,IAAIC,OAAO,EAAE,OAAO;QAAE,GAAGzB,KAAK;QAAEyB;MAAQ,CAAC,CAAC,KAC1C,IAAID,KAAK,EAAE,OAAO;QAAE,GAAGxB,KAAK;QAAEwB;MAAM,CAAC;MAC1C,OAAOxB,KAAK;IACd,KAAKzB,uBAAuB;MAC1B,OAAO;QAAEkD,OAAO,EAAE,IAAI;QAAED,KAAK,EAAE;MAAK,CAAC;IACvC;MACE,OAAOxB,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMuC,uBAAuB,GAAG,SAAAA,CAAA,EAAmC;EAAA,IAAlCvC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEgC,KAAK,EAAE;EAAG,CAAC;EAAA,IAAE7B,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACnE,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKxB,0BAA0B;MAC7B,OAAO;QAAEyB,OAAO,EAAE;MAAK,CAAC;IAC1B,KAAKxB,0BAA0B;MAC7B,OAAO;QACLwB,OAAO,EAAE,KAAK;QACd2B,KAAK,EAAE7B,MAAM,CAACI;MAChB,CAAC;IACH,KAAKzB,uBAAuB;MAC1B,OAAO;QAAEuB,OAAO,EAAE,KAAK;QAAEG,KAAK,EAAEL,MAAM,CAACI;MAAQ,CAAC;IAClD;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMwC,qBAAqB,GAAG,SAAAA,CAAA,EAAwB;EAAA,IAAvBxC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;EAAA,IAAEG,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACtD,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKjB,wBAAwB;MAC3B,OAAO;QAAEkB,OAAO,EAAE;MAAK,CAAC;IAC1B,KAAKjB,wBAAwB;MAC3B,OAAO;QACLiB,OAAO,EAAE,KAAK;QACdiB,IAAI,EAAEnB,MAAM,CAACI;MACf,CAAC;IACH,KAAKlB,qBAAqB;MACxB,OAAO;QAAEgB,OAAO,EAAE,KAAK;QAAEG,KAAK,EAAEL,MAAM,CAACI;MAAQ,CAAC;IAClD,KAAKjB,sBAAsB;MACzB,OAAO,CAAC,CAAC;IACX;MACE,OAAOS,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMyC,4BAA4B,GAAG,SAAAA,CAAA,EAGvC;EAAA,IAFHzC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAEyC,OAAO,EAAE;EAAG,CAAC;EAAA,IACvBtC,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAEN,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKZ,8BAA8B;MAAE;QACnC,OAAO;UAAEiD,OAAO,EAAEtC,MAAM,CAACI;QAAQ,CAAC;MACpC;IACA;MACE,OAAOR,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAM2C,sBAAsB,GAAG,SAAAA,CAAA,EAAsC;EAAA,IAArC3C,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG;IAAE2C,QAAQ,EAAE;EAAG,CAAC;EAAA,IAAExC,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACrE,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKX,oBAAoB;MACvB,OAAO;QAAEkD,QAAQ,EAAExC,MAAM,CAACI;MAAQ,CAAC;IACrC,KAAKb,uBAAuB;MAC1B,OAAO;QAAE,GAAGK,KAAK;QAAE4C,QAAQ,EAAE,CAAC,GAAG5C,KAAK,CAAC4C,QAAQ,EAAExC,MAAM,CAACI,OAAO;MAAE,CAAC;IACpE,KAAKZ,uBAAuB;MAC1B,OAAO;QAAE,GAAGI,KAAK;QAAE6C,UAAU,EAAE;MAAK,CAAC;IACvC,KAAKhD,yBAAyB;MAC5B,OAAO;QAAE,GAAGG,KAAK;QAAE6C,UAAU,EAAE;MAAM,CAAC;IACxC;MACE,OAAO7C,KAAK;EAChB;AACF,CAAC"},"metadata":{},"sourceType":"module"}