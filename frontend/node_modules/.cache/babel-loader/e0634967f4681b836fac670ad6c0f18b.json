{"ast":null,"code":"var _jsxFileName = \"/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/Board.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PROJECT_DATA_ADD_LIST, PROJECT_DATA_ADD_TASK, PROJECT_DATA_JOIN_LINK_UPDATE, PROJECT_DATA_LIST_TITLE_UPDATE, PROJECT_DATA_TASK_ARCHIVED, PROJECT_DATA_TITLE_UPDATE, PROJECT_DATA_UPDATE_LABELS, PROJECT_DATA_UPDATE_LISTS, PROJECT_DATA_USERS_UPDATE, PROJECT_UPDATE_MESSAGES, PROJECT_SET_TASK_SUCCESS, PROJECT_SET_NEW_MESSAGE } from '../../redux/constants/projectConstants';\nimport Lists from './lists/Lists';\nimport Navbar from './navbar/Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const {\n    socket\n  } = useSelector(state => state.socketConnection);\n  const {\n    task\n  } = useSelector(state => state.projectSetTask);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    socket.on('new-task', data => {\n      dispatch({\n        type: PROJECT_DATA_ADD_TASK,\n        payload: data\n      });\n    });\n    socket.on('lists-update', data => {\n      dispatch({\n        type: PROJECT_DATA_UPDATE_LISTS,\n        payload: data.newLists\n      });\n      if (data.restoredTaskId && task && task._id === data.restoredTaskId) {\n        dispatch({\n          type: PROJECT_SET_TASK_SUCCESS,\n          payload: {\n            ...task,\n            archived: false\n          }\n        });\n      }\n    });\n    socket.on('list-added', data => {\n      dispatch({\n        type: PROJECT_DATA_ADD_LIST,\n        payload: data\n      });\n    });\n    socket.on('list-title-updated', data => {\n      dispatch({\n        type: PROJECT_DATA_LIST_TITLE_UPDATE,\n        payload: data\n      });\n    });\n    socket.on('project-title-updated', data => {\n      dispatch({\n        type: PROJECT_DATA_TITLE_UPDATE,\n        payload: data\n      });\n    });\n    socket.on('project-join-link-updated', data => {\n      dispatch({\n        type: PROJECT_DATA_JOIN_LINK_UPDATE,\n        payload: data\n      });\n    });\n    socket.on('project-users-updated', data => {\n      dispatch({\n        type: PROJECT_DATA_USERS_UPDATE,\n        payload: data\n      });\n    });\n    socket.on('task-archived', data => {\n      dispatch({\n        type: PROJECT_DATA_TASK_ARCHIVED,\n        payload: data\n      });\n      if (task && task._id === data.taskId) {\n        dispatch({\n          type: PROJECT_SET_TASK_SUCCESS,\n          payload: {\n            ...task,\n            archived: true\n          }\n        });\n      }\n    });\n    socket.on('task-updated', data => {\n      if (data.newLists) {\n        dispatch({\n          type: PROJECT_DATA_UPDATE_LISTS,\n          payload: data.newLists\n        });\n      }\n      if (task && task._id === data.task._id) {\n        dispatch({\n          type: PROJECT_SET_TASK_SUCCESS,\n          payload: data.task\n        });\n      }\n    });\n    socket.on('tasks-updated', _ref => {\n      let {\n        tasks\n      } = _ref;\n      if (task) {\n        tasks.forEach(t => t._id === task._id && dispatch({\n          type: PROJECT_SET_TASK_SUCCESS,\n          payload: t\n        }));\n      }\n    });\n    socket.on('labels-updated', data => {\n      dispatch({\n        type: PROJECT_DATA_UPDATE_LABELS,\n        payload: data.newLabels\n      });\n    });\n    socket.on('task-deleted', _ref2 => {\n      let {\n        taskId\n      } = _ref2;\n      if (task && task._id === taskId) dispatch({\n        type: PROJECT_SET_TASK_SUCCESS,\n        payload: {\n          ...task,\n          deleted: true\n        }\n      });\n    });\n    socket.on('new-message', data => {\n      dispatch({\n        type: PROJECT_SET_NEW_MESSAGE\n      });\n      dispatch({\n        type: PROJECT_UPDATE_MESSAGES,\n        payload: data\n      });\n    });\n    return () => {\n      socket.off('new-task');\n      socket.off('lists-update');\n      socket.off('list-added');\n      socket.off('list-title-updated');\n      socket.off('project-title-updated');\n      socket.off('project-join-link-updated');\n      socket.off('project-users-updated');\n      socket.off('task-archived');\n      socket.off('task-updated');\n      socket.off('tasks-updated');\n      socket.off('labels-updated');\n      socket.off('task-deleted');\n      socket.off('new-message');\n    };\n  }, [dispatch, socket, task]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      position: 'relative',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100%',\n        overflowX: 'auto',\n        display: 'grid'\n      },\n      children: /*#__PURE__*/_jsxDEV(Lists, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(Board, \"O2BpaE++E9CasB4ZUJ1TMkHss+I=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","PROJECT_DATA_ADD_LIST","PROJECT_DATA_ADD_TASK","PROJECT_DATA_JOIN_LINK_UPDATE","PROJECT_DATA_LIST_TITLE_UPDATE","PROJECT_DATA_TASK_ARCHIVED","PROJECT_DATA_TITLE_UPDATE","PROJECT_DATA_UPDATE_LABELS","PROJECT_DATA_UPDATE_LISTS","PROJECT_DATA_USERS_UPDATE","PROJECT_UPDATE_MESSAGES","PROJECT_SET_TASK_SUCCESS","PROJECT_SET_NEW_MESSAGE","Lists","Navbar","jsxDEV","_jsxDEV","Board","_s","socket","state","socketConnection","task","projectSetTask","dispatch","on","data","type","payload","newLists","restoredTaskId","_id","archived","taskId","_ref","tasks","forEach","t","newLabels","_ref2","deleted","off","style","display","flexDirection","position","height","children","fileName","_jsxFileName","lineNumber","columnNumber","overflowX","_c","$RefreshReg$"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/Board.js"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  PROJECT_DATA_ADD_LIST,\n  PROJECT_DATA_ADD_TASK,\n  PROJECT_DATA_JOIN_LINK_UPDATE,\n  PROJECT_DATA_LIST_TITLE_UPDATE,\n  PROJECT_DATA_TASK_ARCHIVED,\n  PROJECT_DATA_TITLE_UPDATE,\n  PROJECT_DATA_UPDATE_LABELS,\n  PROJECT_DATA_UPDATE_LISTS,\n  PROJECT_DATA_USERS_UPDATE,\n  PROJECT_UPDATE_MESSAGES,\n  PROJECT_SET_TASK_SUCCESS,\n  PROJECT_SET_NEW_MESSAGE,\n} from '../../redux/constants/projectConstants';\n\nimport Lists from './lists/Lists';\nimport Navbar from './navbar/Navbar';\n\nconst Board = () => {\n  const { socket } = useSelector((state) => state.socketConnection);\n  const { task } = useSelector((state) => state.projectSetTask);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    socket.on('new-task', (data) => {\n      dispatch({ type: PROJECT_DATA_ADD_TASK, payload: data });\n    });\n    socket.on('lists-update', (data) => {\n      dispatch({ type: PROJECT_DATA_UPDATE_LISTS, payload: data.newLists });\n      if (data.restoredTaskId && task && task._id === data.restoredTaskId) {\n        dispatch({\n          type: PROJECT_SET_TASK_SUCCESS,\n          payload: { ...task, archived: false },\n        });\n      }\n    });\n    socket.on('list-added', (data) => {\n      dispatch({ type: PROJECT_DATA_ADD_LIST, payload: data });\n    });\n    socket.on('list-title-updated', (data) => {\n      dispatch({ type: PROJECT_DATA_LIST_TITLE_UPDATE, payload: data });\n    });\n    socket.on('project-title-updated', (data) => {\n      dispatch({ type: PROJECT_DATA_TITLE_UPDATE, payload: data });\n    });\n    socket.on('project-join-link-updated', (data) => {\n      dispatch({ type: PROJECT_DATA_JOIN_LINK_UPDATE, payload: data });\n    });\n    socket.on('project-users-updated', (data) => {\n      dispatch({ type: PROJECT_DATA_USERS_UPDATE, payload: data });\n    });\n    socket.on('task-archived', (data) => {\n      dispatch({ type: PROJECT_DATA_TASK_ARCHIVED, payload: data });\n      if (task && task._id === data.taskId) {\n        dispatch({\n          type: PROJECT_SET_TASK_SUCCESS,\n          payload: { ...task, archived: true },\n        });\n      }\n    });\n    socket.on('task-updated', (data) => {\n      if (data.newLists) {\n        dispatch({ type: PROJECT_DATA_UPDATE_LISTS, payload: data.newLists });\n      }\n      if (task && task._id === data.task._id) {\n        dispatch({ type: PROJECT_SET_TASK_SUCCESS, payload: data.task });\n      }\n    });\n    socket.on('tasks-updated', ({ tasks }) => {\n      if (task) {\n        tasks.forEach(\n          (t) =>\n            t._id === task._id &&\n            dispatch({ type: PROJECT_SET_TASK_SUCCESS, payload: t })\n        );\n      }\n    });\n    socket.on('labels-updated', (data) => {\n      dispatch({ type: PROJECT_DATA_UPDATE_LABELS, payload: data.newLabels });\n    });\n    socket.on('task-deleted', ({ taskId }) => {\n      if (task && task._id === taskId)\n        dispatch({\n          type: PROJECT_SET_TASK_SUCCESS,\n          payload: { ...task, deleted: true },\n        });\n    });\n    socket.on('new-message', (data) => {\n      dispatch({ type: PROJECT_SET_NEW_MESSAGE });\n      dispatch({ type: PROJECT_UPDATE_MESSAGES, payload: data });\n    });\n    return () => {\n      socket.off('new-task');\n      socket.off('lists-update');\n      socket.off('list-added');\n      socket.off('list-title-updated');\n      socket.off('project-title-updated');\n      socket.off('project-join-link-updated');\n      socket.off('project-users-updated');\n      socket.off('task-archived');\n      socket.off('task-updated');\n      socket.off('tasks-updated');\n      socket.off('labels-updated');\n      socket.off('task-deleted');\n      socket.off('new-message');\n    };\n  }, [dispatch, socket, task]);\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        position: 'relative',\n        height: '100vh',\n      }}\n    >\n      <Navbar />\n      <div\n        style={{\n          height: '100%',\n          overflowX: 'auto',\n          display: 'grid',\n        }}\n      >\n        <Lists />\n      </div>\n    </div>\n  );\n};\n\nexport default Board;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}