{"ast":null,"code":"var _jsxFileName = \"/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/taskModal/modalComponents/sideComponents/Transfer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { projectTaskTransfer } from '../../../../../redux/actions/projectActions';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\nimport { Menu } from '@material-ui/core';\nimport SideButton from './SideButton';\nimport TransferTasks from '../../../lists/listMore/TransferTasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Transfer = _ref => {\n  _s();\n  let {\n    task,\n    listIndex,\n    taskIndex,\n    currentListId\n  } = _ref;\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const transferHandle = (newListIndex, newListId, callback) => {\n    if (task.archived) {\n      dispatch(projectTaskTransfer(task._id, taskIndex, null, newListIndex, null, newListId, callback));\n    } else {\n      dispatch(projectTaskTransfer(task._id, taskIndex, listIndex, newListIndex, currentListId, newListId, callback));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SideButton, {\n      icon: task.archived ? /*#__PURE__*/_jsxDEV(SettingsBackupRestoreIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(ArrowForwardIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 59\n      }, this),\n      text: task.archived ? 'Restore' : 'Transfer',\n      clickHandle: e => setAnchorEl(e.currentTarget)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: () => setAnchorEl(null),\n      getContentAnchorEl: null,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'left'\n      },\n      transitionDuration: 0,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          outline: 'none'\n        },\n        children: /*#__PURE__*/_jsxDEV(TransferTasks, {\n          listId: !task.archived && currentListId,\n          transferHandle: transferHandle,\n          handleClose: () => setAnchorEl(null),\n          title: task.archived ? 'Restore task' : 'Transfer task to other list'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Transfer, \"gp+5++hSmuKWVRKbS/Gh2o3YCyE=\", false, function () {\n  return [useDispatch];\n});\n_c = Transfer;\nexport default Transfer;\nvar _c;\n$RefreshReg$(_c, \"Transfer\");","map":{"version":3,"names":["React","useState","useDispatch","projectTaskTransfer","ArrowForwardIcon","SettingsBackupRestoreIcon","Menu","SideButton","TransferTasks","jsxDEV","_jsxDEV","Fragment","_Fragment","Transfer","_ref","_s","task","listIndex","taskIndex","currentListId","dispatch","anchorEl","setAnchorEl","transferHandle","newListIndex","newListId","callback","archived","_id","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","text","clickHandle","e","currentTarget","open","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","transitionDuration","style","outline","listId","handleClose","title","_c","$RefreshReg$"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/taskModal/modalComponents/sideComponents/Transfer.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport { projectTaskTransfer } from '../../../../../redux/actions/projectActions';\n\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport SettingsBackupRestoreIcon from '@material-ui/icons/SettingsBackupRestore';\nimport { Menu } from '@material-ui/core';\n\nimport SideButton from './SideButton';\nimport TransferTasks from '../../../lists/listMore/TransferTasks';\n\nconst Transfer = ({ task, listIndex, taskIndex, currentListId }) => {\n  const dispatch = useDispatch();\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const transferHandle = (newListIndex, newListId, callback) => {\n    if (task.archived) {\n      dispatch(\n        projectTaskTransfer(\n          task._id,\n          taskIndex,\n          null,\n          newListIndex,\n          null,\n          newListId,\n          callback\n        )\n      );\n    } else {\n      dispatch(\n        projectTaskTransfer(\n          task._id,\n          taskIndex,\n          listIndex,\n          newListIndex,\n          currentListId,\n          newListId,\n          callback\n        )\n      );\n    }\n  };\n  return (\n    <>\n      <SideButton\n        icon={\n          task.archived ? <SettingsBackupRestoreIcon /> : <ArrowForwardIcon />\n        }\n        text={task.archived ? 'Restore' : 'Transfer'}\n        clickHandle={(e) => setAnchorEl(e.currentTarget)}\n      />\n      <Menu\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={() => setAnchorEl(null)}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transitionDuration={0}\n      >\n        <div style={{ outline: 'none' }}>\n          <TransferTasks\n            listId={!task.archived && currentListId}\n            transferHandle={transferHandle}\n            handleClose={() => setAnchorEl(null)}\n            title={\n              task.archived ? 'Restore task' : 'Transfer task to other list'\n            }\n          />\n        </div>\n      </Menu>\n    </>\n  );\n};\n\nexport default Transfer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}