{"ast":null,"code":"var _jsxFileName = \"/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/lists/listMore/ListMenu.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { projectListDelete, projectTasksArchive, projectTasksTransfer } from '../../../../redux/actions/projectActions';\nimport { Menu, makeStyles, MenuItem, Divider } from '@material-ui/core';\nimport MenuHeader from '../../shared/MenuHeader';\nimport DeleteMenu from '../../shared/DeleteMenu';\nimport TransferTasks from './TransferTasks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  container: {\n    width: 270,\n    outline: 'none'\n  },\n  menuItem: {\n    fontSize: '.85rem'\n  },\n  divider: {\n    margin: '5px 9px'\n  }\n}));\nconst ListMenu = _ref => {\n  _s();\n  let {\n    anchorEl,\n    handleClose,\n    listId,\n    listIndex\n  } = _ref;\n  const dispatch = useDispatch();\n  const [deleteMenu, setDeleteMenu] = useState(false);\n  const [transferMenuOpen, setTransferMenuOpen] = useState(false);\n  const classes = useStyles();\n  const closeHandle = () => {\n    handleClose();\n    setDeleteMenu(false);\n    setTransferMenuOpen(false);\n  };\n  const deleteMenuHandle = e => {\n    const btnText = e.target.innerText.split(' ')[0];\n    setDeleteMenu({\n      open: true,\n      title: e.target.innerText,\n      text: btnText === 'Delete' ? 'Are you sure you want to delete a list and archive tasks inside? This action cannot be undone' : 'Are you sure you want to archive tasks inside this list? This action cannot be undone',\n      btnText: btnText\n    });\n  };\n  const addTaskHandle = () => {\n    handleClose();\n    setTimeout(() => document.getElementById(\"task-input-\".concat(listId)).focus(), 1);\n  };\n  const deleteListHandle = () => {\n    // delete list and archive tasks inside\n    dispatch(projectListDelete(listIndex, listId, () => closeHandle()));\n  };\n  const archiveTasksHandle = () => {\n    dispatch(projectTasksArchive(listIndex, () => closeHandle()));\n  };\n  const transferHandle = newListIndex => {\n    dispatch(projectTasksTransfer(listIndex, newListIndex, () => closeHandle()));\n  };\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    anchorEl: anchorEl,\n    open: Boolean(anchorEl),\n    onClose: closeHandle,\n    getContentAnchorEl: null,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    transitionDuration: 0,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: [deleteMenu.open && /*#__PURE__*/_jsxDEV(DeleteMenu, {\n        Header: /*#__PURE__*/_jsxDEV(MenuHeader, {\n          goBackHandle: () => setDeleteMenu(false),\n          title: deleteMenu.title,\n          handleClose: closeHandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this),\n        deleteHandle: deleteMenu.btnText === 'Delete' ? deleteListHandle : archiveTasksHandle,\n        text: deleteMenu.text,\n        buttonText: deleteMenu.btnText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), transferMenuOpen && /*#__PURE__*/_jsxDEV(TransferTasks, {\n        listId: listId,\n        goBackHandle: () => setTransferMenuOpen(false),\n        handleClose: closeHandle,\n        transferHandle: transferHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), !deleteMenu.open && !transferMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(MenuHeader, {\n          handleClose: closeHandle,\n          title: 'List Actions'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          className: classes.menuItem,\n          style: {\n            marginTop: 5\n          },\n          onClick: addTaskHandle,\n          children: \"Add new task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          className: classes.menuItem,\n          onClick: () => setTransferMenuOpen(true),\n          children: \"Transfer tasks to other list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          className: classes.divider\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          className: classes.menuItem,\n          onClick: deleteMenuHandle,\n          children: \"Archive tasks inside\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n          className: classes.menuItem,\n          onClick: deleteMenuHandle,\n          children: \"Delete List and archive tasks inside\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(ListMenu, \"/St6qqhpsx68diMunqx/Mlel2pU=\", false, function () {\n  return [useDispatch, useStyles];\n});\n_c = ListMenu;\nexport default ListMenu;\nvar _c;\n$RefreshReg$(_c, \"ListMenu\");","map":{"version":3,"names":["React","useState","useDispatch","projectListDelete","projectTasksArchive","projectTasksTransfer","Menu","makeStyles","MenuItem","Divider","MenuHeader","DeleteMenu","TransferTasks","jsxDEV","_jsxDEV","useStyles","container","width","outline","menuItem","fontSize","divider","margin","ListMenu","_ref","_s","anchorEl","handleClose","listId","listIndex","dispatch","deleteMenu","setDeleteMenu","transferMenuOpen","setTransferMenuOpen","classes","closeHandle","deleteMenuHandle","e","btnText","target","innerText","split","open","title","text","addTaskHandle","setTimeout","document","getElementById","concat","focus","deleteListHandle","archiveTasksHandle","transferHandle","newListIndex","Boolean","onClose","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","transitionDuration","children","className","Header","goBackHandle","fileName","_jsxFileName","lineNumber","columnNumber","deleteHandle","buttonText","style","marginTop","onClick","_c","$RefreshReg$"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/lists/listMore/ListMenu.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport { useDispatch } from 'react-redux';\nimport {\n  projectListDelete,\n  projectTasksArchive,\n  projectTasksTransfer,\n} from '../../../../redux/actions/projectActions';\n\nimport { Menu, makeStyles, MenuItem, Divider } from '@material-ui/core';\n\nimport MenuHeader from '../../shared/MenuHeader';\nimport DeleteMenu from '../../shared/DeleteMenu';\nimport TransferTasks from './TransferTasks';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    width: 270,\n    outline: 'none',\n  },\n  menuItem: {\n    fontSize: '.85rem',\n  },\n  divider: {\n    margin: '5px 9px',\n  },\n}));\n\nconst ListMenu = ({ anchorEl, handleClose, listId, listIndex }) => {\n  const dispatch = useDispatch();\n  const [deleteMenu, setDeleteMenu] = useState(false);\n  const [transferMenuOpen, setTransferMenuOpen] = useState(false);\n  const classes = useStyles();\n\n  const closeHandle = () => {\n    handleClose();\n    setDeleteMenu(false);\n    setTransferMenuOpen(false);\n  };\n\n  const deleteMenuHandle = (e) => {\n    const btnText = e.target.innerText.split(' ')[0];\n    setDeleteMenu({\n      open: true,\n      title: e.target.innerText,\n      text:\n        btnText === 'Delete'\n          ? 'Are you sure you want to delete a list and archive tasks inside? This action cannot be undone'\n          : 'Are you sure you want to archive tasks inside this list? This action cannot be undone',\n      btnText: btnText,\n    });\n  };\n  const addTaskHandle = () => {\n    handleClose();\n    setTimeout(\n      () => document.getElementById(`task-input-${listId}`).focus(),\n      1\n    );\n  };\n  const deleteListHandle = () => {\n    // delete list and archive tasks inside\n    dispatch(projectListDelete(listIndex, listId, () => closeHandle()));\n  };\n  const archiveTasksHandle = () => {\n    dispatch(projectTasksArchive(listIndex, () => closeHandle()));\n  };\n\n  const transferHandle = (newListIndex) => {\n    dispatch(\n      projectTasksTransfer(listIndex, newListIndex, () => closeHandle())\n    );\n  };\n\n  return (\n    <Menu\n      anchorEl={anchorEl}\n      open={Boolean(anchorEl)}\n      onClose={closeHandle}\n      getContentAnchorEl={null}\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'left',\n      }}\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'left',\n      }}\n      transitionDuration={0}\n    >\n      <div className={classes.container}>\n        {deleteMenu.open && (\n          <DeleteMenu\n            Header={\n              <MenuHeader\n                goBackHandle={() => setDeleteMenu(false)}\n                title={deleteMenu.title}\n                handleClose={closeHandle}\n              />\n            }\n            deleteHandle={\n              deleteMenu.btnText === 'Delete'\n                ? deleteListHandle\n                : archiveTasksHandle\n            }\n            text={deleteMenu.text}\n            buttonText={deleteMenu.btnText}\n          />\n        )}\n        {transferMenuOpen && (\n          <TransferTasks\n            listId={listId}\n            goBackHandle={() => setTransferMenuOpen(false)}\n            handleClose={closeHandle}\n            transferHandle={transferHandle}\n          />\n        )}\n        {!deleteMenu.open && !transferMenuOpen && (\n          <div>\n            <MenuHeader handleClose={closeHandle} title={'List Actions'} />\n            <MenuItem\n              className={classes.menuItem}\n              style={{ marginTop: 5 }}\n              onClick={addTaskHandle}\n            >\n              Add new task\n            </MenuItem>\n            <MenuItem\n              className={classes.menuItem}\n              onClick={() => setTransferMenuOpen(true)}\n            >\n              Transfer tasks to other list\n            </MenuItem>\n            <Divider className={classes.divider} />\n            <MenuItem className={classes.menuItem} onClick={deleteMenuHandle}>\n              Archive tasks inside\n            </MenuItem>\n            <MenuItem className={classes.menuItem} onClick={deleteMenuHandle}>\n              Delete List and archive tasks inside\n            </MenuItem>\n          </div>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default ListMenu;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SACEC,iBAAiB,EACjBC,mBAAmB,EACnBC,oBAAoB,QACf,0CAA0C;AAEjD,SAASC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,mBAAmB;AAEvE,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,SAAS,GAAGR,UAAU,CAAC,OAAO;EAClCS,SAAS,EAAE;IACTC,KAAK,EAAE,GAAG;IACVC,OAAO,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQ,EAAE;EACZ,CAAC;EACDC,OAAO,EAAE;IACPC,MAAM,EAAE;EACV;AACF,CAAC,CAAC,CAAC;AAEH,MAAMC,QAAQ,GAAGC,IAAA,IAAkD;EAAAC,EAAA;EAAA,IAAjD;IAAEC,QAAQ;IAAEC,WAAW;IAAEC,MAAM;IAAEC;EAAU,CAAC,GAAAL,IAAA;EAC5D,MAAMM,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC6B,UAAU,EAAEC,aAAa,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACgC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMkC,OAAO,GAAGpB,SAAS,CAAC,CAAC;EAE3B,MAAMqB,WAAW,GAAGA,CAAA,KAAM;IACxBT,WAAW,CAAC,CAAC;IACbK,aAAa,CAAC,KAAK,CAAC;IACpBE,mBAAmB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMG,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,SAAS,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChDV,aAAa,CAAC;MACZW,IAAI,EAAE,IAAI;MACVC,KAAK,EAAEN,CAAC,CAACE,MAAM,CAACC,SAAS;MACzBI,IAAI,EACFN,OAAO,KAAK,QAAQ,GAChB,+FAA+F,GAC/F,uFAAuF;MAC7FA,OAAO,EAAEA;IACX,CAAC,CAAC;EACJ,CAAC;EACD,MAAMO,aAAa,GAAGA,CAAA,KAAM;IAC1BnB,WAAW,CAAC,CAAC;IACboB,UAAU,CACR,MAAMC,QAAQ,CAACC,cAAc,eAAAC,MAAA,CAAetB,MAAM,CAAE,CAAC,CAACuB,KAAK,CAAC,CAAC,EAC7D,CACF,CAAC;EACH,CAAC;EACD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAtB,QAAQ,CAAC3B,iBAAiB,CAAC0B,SAAS,EAAED,MAAM,EAAE,MAAMQ,WAAW,CAAC,CAAC,CAAC,CAAC;EACrE,CAAC;EACD,MAAMiB,kBAAkB,GAAGA,CAAA,KAAM;IAC/BvB,QAAQ,CAAC1B,mBAAmB,CAACyB,SAAS,EAAE,MAAMO,WAAW,CAAC,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMkB,cAAc,GAAIC,YAAY,IAAK;IACvCzB,QAAQ,CACNzB,oBAAoB,CAACwB,SAAS,EAAE0B,YAAY,EAAE,MAAMnB,WAAW,CAAC,CAAC,CACnE,CAAC;EACH,CAAC;EAED,oBACEtB,OAAA,CAACR,IAAI;IACHoB,QAAQ,EAAEA,QAAS;IACnBiB,IAAI,EAAEa,OAAO,CAAC9B,QAAQ,CAAE;IACxB+B,OAAO,EAAErB,WAAY;IACrBsB,kBAAkB,EAAE,IAAK;IACzBC,YAAY,EAAE;MACZC,QAAQ,EAAE,QAAQ;MAClBC,UAAU,EAAE;IACd,CAAE;IACFC,eAAe,EAAE;MACfF,QAAQ,EAAE,KAAK;MACfC,UAAU,EAAE;IACd,CAAE;IACFE,kBAAkB,EAAE,CAAE;IAAAC,QAAA,eAEtBlD,OAAA;MAAKmD,SAAS,EAAE9B,OAAO,CAACnB,SAAU;MAAAgD,QAAA,GAC/BjC,UAAU,CAACY,IAAI,iBACd7B,OAAA,CAACH,UAAU;QACTuD,MAAM,eACJpD,OAAA,CAACJ,UAAU;UACTyD,YAAY,EAAEA,CAAA,KAAMnC,aAAa,CAAC,KAAK,CAAE;UACzCY,KAAK,EAAEb,UAAU,CAACa,KAAM;UACxBjB,WAAW,EAAES;QAAY;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CACF;QACDC,YAAY,EACVzC,UAAU,CAACQ,OAAO,KAAK,QAAQ,GAC3Ba,gBAAgB,GAChBC,kBACL;QACDR,IAAI,EAAEd,UAAU,CAACc,IAAK;QACtB4B,UAAU,EAAE1C,UAAU,CAACQ;MAAQ;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF,EACAtC,gBAAgB,iBACfnB,OAAA,CAACF,aAAa;QACZgB,MAAM,EAAEA,MAAO;QACfuC,YAAY,EAAEA,CAAA,KAAMjC,mBAAmB,CAAC,KAAK,CAAE;QAC/CP,WAAW,EAAES,WAAY;QACzBkB,cAAc,EAAEA;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF,EACA,CAACxC,UAAU,CAACY,IAAI,IAAI,CAACV,gBAAgB,iBACpCnB,OAAA;QAAAkD,QAAA,gBACElD,OAAA,CAACJ,UAAU;UAACiB,WAAW,EAAES,WAAY;UAACQ,KAAK,EAAE;QAAe;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC/DzD,OAAA,CAACN,QAAQ;UACPyD,SAAS,EAAE9B,OAAO,CAAChB,QAAS;UAC5BuD,KAAK,EAAE;YAAEC,SAAS,EAAE;UAAE,CAAE;UACxBC,OAAO,EAAE9B,aAAc;UAAAkB,QAAA,EACxB;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACXzD,OAAA,CAACN,QAAQ;UACPyD,SAAS,EAAE9B,OAAO,CAAChB,QAAS;UAC5ByD,OAAO,EAAEA,CAAA,KAAM1C,mBAAmB,CAAC,IAAI,CAAE;UAAA8B,QAAA,EAC1C;QAED;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACXzD,OAAA,CAACL,OAAO;UAACwD,SAAS,EAAE9B,OAAO,CAACd;QAAQ;UAAA+C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACvCzD,OAAA,CAACN,QAAQ;UAACyD,SAAS,EAAE9B,OAAO,CAAChB,QAAS;UAACyD,OAAO,EAAEvC,gBAAiB;UAAA2B,QAAA,EAAC;QAElE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC,eACXzD,OAAA,CAACN,QAAQ;UAACyD,SAAS,EAAE9B,OAAO,CAAChB,QAAS;UAACyD,OAAO,EAAEvC,gBAAiB;UAAA2B,QAAA,EAAC;QAElE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC9C,EAAA,CApHIF,QAAQ;EAAA,QACKrB,WAAW,EAGZa,SAAS;AAAA;AAAA8D,EAAA,GAJrBtD,QAAQ;AAsHd,eAAeA,QAAQ;AAAC,IAAAsD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}