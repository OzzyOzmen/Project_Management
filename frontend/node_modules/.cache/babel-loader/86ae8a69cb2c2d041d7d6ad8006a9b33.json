{"ast":null,"code":"var _jsxFileName = \"/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/taskModal/modalComponents/comments/CommentInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { makeStyles, TextField, Button } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexBasis: 'calc(100% - 50px)',\n    border: '1px solid #ccc',\n    background: '#fff',\n    borderRadius: 6\n  },\n  inputField: {\n    '& \t.MuiInputBase-multiline': {\n      fontSize: '.875rem',\n      padding: '8px 6px'\n    },\n    '& fieldset': {\n      border: 'none'\n    }\n  },\n  actions: {\n    marginTop: 10,\n    padding: '0 0 6px 5px',\n    alignItems: 'center',\n    display: 'flex',\n    '& svg': {\n      cursor: 'pointer',\n      marginLeft: 5\n    }\n  }\n}));\nconst CommentInput = _ref => {\n  _s();\n  let {\n    commentId,\n    commentIndex,\n    editCommentHandle,\n    addCommentHandle,\n    initialComment,\n    editCloseHandle,\n    disabled\n  } = _ref;\n  const [commentOpen, setCommentOpen] = useState(false);\n  const [comment, setComment] = useState('');\n  const classes = useStyles();\n  const inputRef = useRef();\n  useEffect(() => initialComment && inputRef.current.select(), [initialComment]);\n  const cancelHandle = () => {\n    setCommentOpen(false);\n    setComment('');\n  };\n  const commentOnTask = () => {\n    if (comment.trim() === '') inputRef.current.select();else {\n      initialComment ? editCommentHandle(commentId, comment, commentIndex, editCloseHandle) : addCommentHandle(comment, () => {\n        inputRef.current.blur();\n        cancelHandle();\n      });\n    }\n  };\n  const keyPressHandle = e => {\n    if (e.key === 'Escape') {\n      inputRef.current.blur();\n      cancelHandle();\n    } else if (e.key === 'Enter') {\n      e.preventDefault();\n      commentOnTask();\n    }\n  };\n  const openCommentHandle = () => {\n    setCommentOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"comment\",\n      name: \"comment\",\n      type: \"text\",\n      inputRef: inputRef,\n      placeholder: \"Write a comment\",\n      multiline: true,\n      variant: \"outlined\",\n      value: comment ? comment : addCommentHandle ? comment : initialComment,\n      onChange: e => setComment(e.target.value),\n      className: classes.inputField,\n      onKeyDown: keyPressHandle,\n      fullWidth: true,\n      onFocus: openCommentHandle,\n      InputProps: {\n        spellCheck: 'false'\n      },\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), (commentOpen || initialComment) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        color: \"primary\",\n        variant: \"contained\",\n        onClick: commentOnTask,\n        children: initialComment ? 'Save' : 'Comment'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CloseIcon, {\n        onClick: initialComment ? editCloseHandle : cancelHandle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(CommentInput, \"GrseIiTXjmfEGzXitOc5p3ghtfk=\", false, function () {\n  return [useStyles];\n});\n_c = CommentInput;\nexport default CommentInput;\nvar _c;\n$RefreshReg$(_c, \"CommentInput\");","map":{"version":3,"names":["React","useState","useRef","useEffect","makeStyles","TextField","Button","CloseIcon","jsxDEV","_jsxDEV","useStyles","container","display","flexDirection","flexBasis","border","background","borderRadius","inputField","fontSize","padding","actions","marginTop","alignItems","cursor","marginLeft","CommentInput","_ref","_s","commentId","commentIndex","editCommentHandle","addCommentHandle","initialComment","editCloseHandle","disabled","commentOpen","setCommentOpen","comment","setComment","classes","inputRef","current","select","cancelHandle","commentOnTask","trim","blur","keyPressHandle","e","key","preventDefault","openCommentHandle","className","children","id","name","type","placeholder","multiline","variant","value","onChange","target","onKeyDown","fullWidth","onFocus","InputProps","spellCheck","fileName","_jsxFileName","lineNumber","columnNumber","size","color","onClick","_c","$RefreshReg$"],"sources":["/Users/ozzyozmencelik/Projects/project-management/frontend/src/components/dashboard/taskModal/modalComponents/comments/CommentInput.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\n\nimport { makeStyles, TextField, Button } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexBasis: 'calc(100% - 50px)',\n    border: '1px solid #ccc',\n    background: '#fff',\n    borderRadius: 6,\n  },\n  inputField: {\n    '& \t.MuiInputBase-multiline': {\n      fontSize: '.875rem',\n      padding: '8px 6px',\n    },\n    '& fieldset': {\n      border: 'none',\n    },\n  },\n  actions: {\n    marginTop: 10,\n    padding: '0 0 6px 5px',\n    alignItems: 'center',\n    display: 'flex',\n    '& svg': {\n      cursor: 'pointer',\n      marginLeft: 5,\n    },\n  },\n}));\n\nconst CommentInput = ({\n  commentId,\n  commentIndex,\n  editCommentHandle,\n  addCommentHandle,\n  initialComment,\n  editCloseHandle,\n  disabled,\n}) => {\n  const [commentOpen, setCommentOpen] = useState(false);\n  const [comment, setComment] = useState('');\n  const classes = useStyles();\n  const inputRef = useRef();\n\n  useEffect(() => initialComment && inputRef.current.select(), [\n    initialComment,\n  ]);\n\n  const cancelHandle = () => {\n    setCommentOpen(false);\n    setComment('');\n  };\n\n  const commentOnTask = () => {\n    if (comment.trim() === '') inputRef.current.select();\n    else {\n      initialComment\n        ? editCommentHandle(commentId, comment, commentIndex, editCloseHandle)\n        : addCommentHandle(comment, () => {\n            inputRef.current.blur();\n            cancelHandle();\n          });\n    }\n  };\n  const keyPressHandle = (e) => {\n    if (e.key === 'Escape') {\n      inputRef.current.blur();\n      cancelHandle();\n    } else if (e.key === 'Enter') {\n      e.preventDefault();\n      commentOnTask();\n    }\n  };\n\n  const openCommentHandle = () => {\n    setCommentOpen(true);\n  };\n\n  return (\n    <div className={classes.container}>\n      <TextField\n        id='comment'\n        name='comment'\n        type='text'\n        inputRef={inputRef}\n        placeholder='Write a comment'\n        multiline\n        variant='outlined'\n        value={comment ? comment : addCommentHandle ? comment : initialComment}\n        onChange={(e) => setComment(e.target.value)}\n        className={classes.inputField}\n        onKeyDown={keyPressHandle}\n        fullWidth\n        onFocus={openCommentHandle}\n        InputProps={{ spellCheck: 'false' }}\n        disabled={disabled}\n      />\n      {(commentOpen || initialComment) && (\n        <div className={classes.actions}>\n          <Button\n            size='small'\n            color='primary'\n            variant='contained'\n            onClick={commentOnTask}\n          >\n            {initialComment ? 'Save' : 'Comment'}\n          </Button>\n          <CloseIcon\n            onClick={initialComment ? editCloseHandle : cancelHandle}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CommentInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}